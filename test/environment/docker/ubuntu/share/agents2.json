{
  "stats": {
    "suites": 11,
    "tests": 29,
    "passes": 29,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-08T12:17:22.794Z",
    "end": "2020-06-08T12:17:32.573Z",
    "duration": 9779,
    "testsRegistered": 29,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "c8c4f006-5cc1-4443-9f01-2cff3ff6a9ee",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "67e6dc35-fbd4-4a1a-924e-e4788d0926ae",
        "title": "Agents",
        "fullFile": "/wazuh-api/test/test_agents_2.js",
        "file": "/test/test_agents_2.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "8959cbd5-d8de-410f-9948-5a9f0d58cecf",
            "title": "PUT/agents/:agent_name",
            "fullFile": "/wazuh-api/test/test_agents_2.js",
            "file": "/test/test_agents_2.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook: Request",
                "fullTitle": "Agents PUT/agents/:agent_name \"before all\" hook: Request",
                "timedOut": false,
                "duration": 368,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.put(\"/agents/testingNewAgent%2520Put\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['id', 'key']);\n    res.body.error.should.equal(0);\n    res.body.data.id.should.match(/^\\d+$/);\n    res.body.data.key.should.match(/^[a-zA-Z0-9=]+$/);\n    agent_id = res.body.data.id;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "ee3a7321-8022-47ef-bfd1-918ec285c4ca",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook",
                "fullTitle": "Agents PUT/agents/:agent_name \"after all\" hook",
                "timedOut": false,
                "duration": 276,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.delete(\"/agents/\" + agent_id + '?purge')\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) return done(err);\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "a00020dc-7a6b-46fc-bd7a-d4dbe1433a18",
                "isHook": true,
                "skipped": false
              }
            ],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Agents PUT/agents/:agent_name Request",
                "timedOut": false,
                "duration": 272,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n            .put(\"/agents/testingNewAgentPut\")\n            .auth(common.credentials.user, common.credentials.password)\n            .expect(\"Content-type\",/json/)\n            .expect(200)\n            .end(function(err,res){\n                if (err) return done(err);\n                res.body.should.have.properties(['error', 'data']);\n                res.body.data.should.have.properties(['id', 'key']);\n                res.body.error.should.equal(0);\n                res.body.data.id.should.match(/^\\d+$/);\n                res.body.data.key.should.match(/^[a-zA-Z0-9=]+$/);\n                agent_id = res.body.data.id;\n                done();\n            });",
                "err": {},
                "isRoot": false,
                "uuid": "c00b58ff-30f5-4dd7-9902-0106eb892057",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Errors: Name already present",
                "fullTitle": "Agents PUT/agents/:agent_name Errors: Name already present",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n            .put(\"/agents/testingNewAgentPut\")\n            .auth(common.credentials.user, common.credentials.password)\n            .expect(\"Content-type\",/json/)\n            .expect(200)\n            .end(function(err,res){\n                if (err) return done(err);\n                res.body.should.have.properties(['error', 'message']);\n                if (is_auth_d_running()) res.body.error.should.equal(9008);\n                else                     res.body.error.should.equal(1705);\n                res.body.message.should.be.type('string');\n                done();\n            });",
                "err": {},
                "isRoot": false,
                "uuid": "06ef9cf2-9ace-4346-a620-e5853f3aef86",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Params: Bad agent name",
                "fullTitle": "Agents PUT/agents/:agent_name Params: Bad agent name",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.put(\"/agents/testingNewAgent!!\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(601);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c5c34bf2-92c0-4e80-a320-90a2a5399838",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Params: New character (%) in agent name",
                "fullTitle": "Agents PUT/agents/:agent_name Params: New character (%) in agent name",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/agents/name/testingNewAgent%2520Put\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['id', 'node_name', 'ip', 'dateAdd', 'status', 'registerIP', 'name']);\n    res.body.error.should.equal(0);\n    res.body.data.id.should.match(/^\\d+$/);\n    res.body.data.name.should.match(/^[a-zA-Z0-9_\\-.%]+$/);\n    agent_id = res.body.data.id;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "6acad1a6-2ad2-4d63-9bec-13c3e018254b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c00b58ff-30f5-4dd7-9902-0106eb892057",
              "06ef9cf2-9ace-4346-a620-e5853f3aef86",
              "c5c34bf2-92c0-4e80-a320-90a2a5399838",
              "6acad1a6-2ad2-4d63-9bec-13c3e018254b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 898,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "5835527b-f859-4837-96d8-081c781d3300",
            "title": "DELETE/agents/:agent_id",
            "fullFile": "/wazuh-api/test/test_agents_2.js",
            "file": "/test/test_agents_2.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Agents DELETE/agents/:agent_id \"before all\" hook",
                "timedOut": false,
                "duration": 312,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.put(\"/agents/TestingDeleteAgent\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    agent_id = res.body.data.id;\n    setTimeout(function(){ \n        done();\n    }, 30)\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "6e5723a2-bdb1-4e24-ab54-d25976382c0a",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Agents DELETE/agents/:agent_id Request",
                "timedOut": false,
                "duration": 285,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n            .delete(\"/agents/\" + agent_id + '?purge')\n            .auth(common.credentials.user, common.credentials.password)\n            .expect(\"Content-type\",/json/)\n            .expect(200)\n            .end(function(err,res){\n                if (err) return done(err);\n                res.body.should.have.properties(['error', 'data']);\n                res.body.data.should.have.properties(['msg', 'affected_agents']);\n                res.body.error.should.equal(0);\n                res.body.data.msg.should.be.type('string');\n                res.body.data.affected_agents[0].should.equal(agent_id);\n                done();\n            });",
                "err": {},
                "isRoot": false,
                "uuid": "86a1b3f9-9146-45f0-a548-81482a5b03e0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Errors: ID is not present",
                "fullTitle": "Agents DELETE/agents/:agent_id Errors: ID is not present",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n            .delete(\"/agents/\" + agent_id)\n            .auth(common.credentials.user, common.credentials.password)\n            .expect(\"Content-type\",/json/)\n            .expect(200)\n            .end(function(err,res){\n                if (err) return done(err);\n                res.body.should.have.properties(['error', 'data']);\n                if (is_auth_d_running()) res.body.data.failed_ids[0].error.code.should.equal(9011);\n                else                     res.body.data.failed_ids[0].error.code.should.equal(1701);\n                res.body.data.msg.should.be.type('string');\n                done();\n            });",
                "err": {},
                "isRoot": false,
                "uuid": "53460c12-e3ed-4f5f-b17d-5c50aaf17087",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Params: Bad agent id",
                "fullTitle": "Agents DELETE/agents/:agent_id Params: Bad agent id",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.delete(\"/agents/abc\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(600);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "92be5e72-1a87-48f2-bc7a-1e494dfd8f1e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "86a1b3f9-9146-45f0-a548-81482a5b03e0",
              "53460c12-e3ed-4f5f-b17d-5c50aaf17087",
              "92be5e72-1a87-48f2-bc7a-1e494dfd8f1e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 629,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "b94d3406-b759-487a-8bd8-d513d3300abd",
            "title": "POST/agents",
            "fullFile": "/wazuh-api/test/test_agents_2.js",
            "file": "/test/test_agents_2.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
              {
                "uuid": "8bafa37b-3561-4f6d-b25e-e038a662180c",
                "title": "Any",
                "fullFile": "/wazuh-api/test/test_agents_2.js",
                "file": "/test/test_agents_2.js",
                "beforeHooks": [],
                "afterHooks": [
                  {
                    "title": "\"after all\" hook",
                    "fullTitle": "Agents POST/agents Any \"after all\" hook",
                    "timedOut": false,
                    "duration": 269,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.delete(\"/agents/\" + agent_id + '?purge')\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) return done(err);\n    done();\n  });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cfbd28f-1872-4b29-a327-63350e8f063c",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "tests": [
                  {
                    "title": "Request",
                    "fullTitle": "Agents POST/agents Any Request",
                    "timedOut": false,
                    "duration": 300,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents\")\n                .send({'name':'NewAgentPost', 'ip':'any'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(200)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'data']);\n                    res.body.data.should.have.properties(['id', 'key']);\n                    res.body.error.should.equal(0);\n                    res.body.data.id.should.match(/^\\d+$/);\n                    res.body.data.key.should.match(/^[0-9a-zA-Z=]+$/);\n                    agent_id = res.body.data.id;\n                    agent_key = res.body.data.key;\n                    setTimeout(function(){ \n                        done();\n                    }, 30)\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5dbc91dd-f5df-43b2-97ca-ef40bbf68450",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Check key",
                    "fullTitle": "Agents POST/agents Any Check key",
                    "timedOut": false,
                    "duration": 301,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n    .get(\"/agents/\" + agent_id + \"/key\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.equal(agent_key);\n        done();\n    });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "03e36b76-14fd-47d6-9c6d-1bbc142cc4c1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Errors: Name already present",
                    "fullTitle": "Agents POST/agents Any Errors: Name already present",
                    "timedOut": false,
                    "duration": 269,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.post(\"/agents\")\n.send({'name':'NewAgentPost', 'ip':'any'})\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    if (is_auth_d_running()) res.body.error.should.equal(9008);\n    else                     res.body.error.should.equal(1705);\n    res.body.message.should.be.type('string');\n    done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09225800-32b9-46f9-a427-621cef4b93b0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Missing field name",
                    "fullTitle": "Agents POST/agents Any Filters: Missing field name",
                    "timedOut": false,
                    "duration": 75,
                    "state": "passed",
                    "speed": "medium",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents\")\n                .send({'ip':'any'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(604);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92d56d9b-aeb8-4d52-ada2-0b10ab77327f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Invalid field",
                    "fullTitle": "Agents POST/agents Any Filters: Invalid field",
                    "timedOut": false,
                    "duration": 75,
                    "state": "passed",
                    "speed": "medium",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents\")\n                .send({'extraField': 'invalid', 'name': 'testagentpost', 'ip':'any'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(604);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5222a9c-5a82-4f9b-9959-249f1e758391",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "5dbc91dd-f5df-43b2-97ca-ef40bbf68450",
                  "03e36b76-14fd-47d6-9c6d-1bbc142cc4c1",
                  "09225800-32b9-46f9-a427-621cef4b93b0",
                  "92d56d9b-aeb8-4d52-ada2-0b10ab77327f",
                  "e5222a9c-5a82-4f9b-9959-249f1e758391"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 1020,
                "root": false,
                "rootEmpty": false,
                "_timeout": 10000
              },
              {
                "uuid": "02f49f9f-db1e-410e-b9eb-b62808db71f2",
                "title": "IP Automatic",
                "fullFile": "/wazuh-api/test/test_agents_2.js",
                "file": "/test/test_agents_2.js",
                "beforeHooks": [],
                "afterHooks": [
                  {
                    "title": "\"after all\" hook",
                    "fullTitle": "Agents POST/agents IP Automatic \"after all\" hook",
                    "timedOut": false,
                    "duration": 276,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.delete(\"/agents/\" + agent_id + '?purge')\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) return done(err);\n    done();\n  });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd8b36e4-001a-41a8-9860-86f2da5dae86",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "tests": [
                  {
                    "title": "Request: Automatic IP",
                    "fullTitle": "Agents POST/agents IP Automatic Request: Automatic IP",
                    "timedOut": false,
                    "duration": 296,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents\")\n                .send({'name':'NewAgentPost2'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(200)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'data']);\n                    res.body.data.should.have.properties(['id', 'key']);\n                    res.body.error.should.equal(0);\n                    res.body.data.id.should.match(/^\\d+$/);\n                    res.body.data.key.should.match(/^[0-9a-zA-Z=]+$/);\n                    agent_id = res.body.data.id;\n                    setTimeout(function(){ \n                        done();\n                    }, 30)\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bd477fce-4613-47b0-8799-6255dd2882cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Errors: Duplicated IP",
                    "fullTitle": "Agents POST/agents IP Automatic Errors: Duplicated IP",
                    "timedOut": false,
                    "duration": 269,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.post(\"/agents\")\n.send({'name':'NewAgentPost3'})\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    if (is_auth_d_running()) res.body.error.should.equal(9007);\n    else                     res.body.error.should.equal(1706);\n    done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "47617225-1051-420f-8e65-ecc05f2c586d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "bd477fce-4613-47b0-8799-6255dd2882cf",
                  "47617225-1051-420f-8e65-ecc05f2c586d"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 565,
                "root": false,
                "rootEmpty": false,
                "_timeout": 10000
              },
              {
                "uuid": "a521fc06-02e4-4a23-bb52-25d1ac13d277",
                "title": "IP",
                "fullFile": "/wazuh-api/test/test_agents_2.js",
                "file": "/test/test_agents_2.js",
                "beforeHooks": [],
                "afterHooks": [
                  {
                    "title": "\"after each\" hook",
                    "fullTitle": "Agents POST/agents IP \"after each\" hook",
                    "timedOut": false,
                    "duration": 267,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "if (agent_id != 0){\n    request(common.url)\n    .delete(\"/agents/\" + agent_id + '?purge')\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\",/json/)\n    .expect(200)\n    .end(function(err, res) {\n        if (err) return done(err);\n        done();\n      });\n}\nelse {\n    done();\n}",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9cf1f189-112a-4247-bdb2-c40b7c39b907",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "tests": [
                  {
                    "title": "Request",
                    "fullTitle": "Agents POST/agents IP Request",
                    "timedOut": false,
                    "duration": 273,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents\")\n                .send({'name':'NewAgentPost4', 'ip': '192.246.247.248'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(200)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'data']);\n                    res.body.error.should.equal(0);\n                    res.body.data.id.should.match(/^\\d+$/);\n                    res.body.data.key.should.match(/^[0-9a-zA-Z=]+$/);\n                    agent_id = res.body.data.id;\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "88583737-2532-4e33-9cd4-62975813759a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Bad IP",
                    "fullTitle": "Agents POST/agents IP Filters: Bad IP",
                    "timedOut": false,
                    "duration": 78,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents\")\n                .send({'name':'NewAgentPost4', 'ip': 'A.B.C.D'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(606);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae056464-17fc-419c-9e75-dd42c9cc9c9f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Bad IP 2",
                    "fullTitle": "Agents POST/agents IP Filters: Bad IP 2",
                    "timedOut": false,
                    "duration": 76,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents\")\n                .send({'name':'NewAgentPost4', 'ip': '333.333.333.333'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(606);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "66131af3-c9d0-43fd-8b92-f72d3c5c8122",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "88583737-2532-4e33-9cd4-62975813759a",
                  "ae056464-17fc-419c-9e75-dd42c9cc9c9f",
                  "66131af3-c9d0-43fd-8b92-f72d3c5c8122"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 427,
                "root": false,
                "rootEmpty": false,
                "_timeout": 10000
              }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "a25e1b90-762f-4a8a-af1e-f417674ca540",
            "title": "POST/agents/insert",
            "fullFile": "/wazuh-api/test/test_agents_2.js",
            "file": "/test/test_agents_2.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
              {
                "uuid": "e575bc4a-8796-4475-9ae2-997e7ac970ee",
                "title": "Any",
                "fullFile": "/wazuh-api/test/test_agents_2.js",
                "file": "/test/test_agents_2.js",
                "beforeHooks": [],
                "afterHooks": [
                  {
                    "title": "\"after all\" hook",
                    "fullTitle": "Agents POST/agents/insert Any \"after all\" hook",
                    "timedOut": false,
                    "duration": 271,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.delete(\"/agents/\" + agent_id + '?purge')\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) return done(err);\n    done();\n  });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "579e8473-5fb9-4c5e-b8c7-378321e9ae22",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "tests": [
                  {
                    "title": "Request",
                    "fullTitle": "Agents POST/agents/insert Any Request",
                    "timedOut": false,
                    "duration": 298,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'name':'NewAgentPostInsert', 'ip':'any', 'id':'750', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(200)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'data']);\n                    res.body.data.should.have.properties(['id','key']);\n                    res.body.error.should.equal(0);\n                    res.body.data.id.should.match(/^\\d+$/);\n                    res.body.data.key.should.match(/^[a-zA-Z0-9=]+/);\n                    agent_id = res.body.data.id;\n                    setTimeout(function(){\n                        done();\n                    }, 30)\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "036a7a2e-2580-4996-8d08-f8e5506c7311",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Insert agent with force parameter (ID and name already presents)",
                    "fullTitle": "Agents POST/agents/insert Any Insert agent with force parameter (ID and name already presents)",
                    "timedOut": false,
                    "duration": 298,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'name':'NewAgentPostInsert', 'ip':'any', 'id':'750', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64', 'force': '0'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(200)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'data']);\n                    res.body.data.should.have.properties(['id','key']);\n                    res.body.error.should.equal(0);\n                    res.body.data.id.should.match(/^\\d+$/);\n                    res.body.data.key.should.match(/^[a-zA-Z0-9=]+/);\n                    agent_id = res.body.data.id;\n                    setTimeout(function(){\n                        done();\n                    }, 30)\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e35edf3b-e568-41cd-bd03-46a41b7c3df6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Errors: Name already present",
                    "fullTitle": "Agents POST/agents/insert Any Errors: Name already present",
                    "timedOut": false,
                    "duration": 273,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.post(\"/agents/insert\")\n.send({'name':'NewAgentPostInsert', 'ip':'any', 'id':'751', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    if (is_auth_d_running()) res.body.error.should.equal(9008);\n    else                     res.body.error.should.equal(1705);\n    res.body.message.should.be.type('string');\n    done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "601deeb3-8feb-4bff-8629-08935f5de6a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Errors: ID already present",
                    "fullTitle": "Agents POST/agents/insert Any Errors: ID already present",
                    "timedOut": false,
                    "duration": 279,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.post(\"/agents/insert\")\n.send({'name':'NewAgentPostInsert', 'ip':'any', 'id':'750', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    if (is_auth_d_running()) res.body.error.should.equal(9012);\n    else                     res.body.error.should.equal(1708);\n    res.body.message.should.be.type('string');\n    done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9c76c3f-5f41-4da6-b62f-10c9ff5a4ae8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Errors: Invalid key",
                    "fullTitle": "Agents POST/agents/insert Any Errors: Invalid key",
                    "timedOut": false,
                    "duration": 275,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.post(\"/agents/insert\")\n.send({'name':'NewAgentPostInsert', 'ip':'any', 'id':'750', 'key':'short'})\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1709);\n    res.body.message.should.be.type('string');\n    done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6b57033-6931-4e68-9d90-45b538677085",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Missing fields",
                    "fullTitle": "Agents POST/agents/insert Any Filters: Missing fields",
                    "timedOut": false,
                    "duration": 79,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'ip':'any'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(604);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e050483-36d6-44f1-b470-08f7786583f9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Invalid field",
                    "fullTitle": "Agents POST/agents/insert Any Filters: Invalid field",
                    "timedOut": false,
                    "duration": 78,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'extraField': 'invalid', 'name':'NewAgentPostInsert', 'ip':'any', 'id':'750', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(604);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b38707c2-77fc-4a7f-8516-fee63a409202",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "036a7a2e-2580-4996-8d08-f8e5506c7311",
                  "e35edf3b-e568-41cd-bd03-46a41b7c3df6",
                  "601deeb3-8feb-4bff-8629-08935f5de6a7",
                  "e9c76c3f-5f41-4da6-b62f-10c9ff5a4ae8",
                  "e6b57033-6931-4e68-9d90-45b538677085",
                  "9e050483-36d6-44f1-b470-08f7786583f9",
                  "b38707c2-77fc-4a7f-8516-fee63a409202"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 1580,
                "root": false,
                "rootEmpty": false,
                "_timeout": 10000
              },
              {
                "uuid": "bb8effc1-7a49-4288-87d6-3496c479539b",
                "title": "IP Automatic",
                "fullFile": "/wazuh-api/test/test_agents_2.js",
                "file": "/test/test_agents_2.js",
                "beforeHooks": [],
                "afterHooks": [
                  {
                    "title": "\"after all\" hook",
                    "fullTitle": "Agents POST/agents/insert IP Automatic \"after all\" hook",
                    "timedOut": false,
                    "duration": 267,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.delete(\"/agents/\" + agent_id + '?purge')\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) return done(err);\n    done();\n  });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d1e7c8d-2fd3-4c35-ae07-0c299316ffef",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "tests": [
                  {
                    "title": "Request: Automatic IP",
                    "fullTitle": "Agents POST/agents/insert IP Automatic Request: Automatic IP",
                    "timedOut": false,
                    "duration": 280,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'name':'NewAgentPostInsert', 'id':'755', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(200)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'data']);\n                    res.body.data.should.have.properties(['id', 'key']);\n                    res.body.error.should.equal(0);\n                    res.body.data.id.should.match(/^\\d+$/);\n                    res.body.data.key.should.match(/^[a-zA-Z0-9=]+/);\n                    agent_id = res.body.data.id;\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eb18524c-e2fa-488a-abf7-b37f8f50d117",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Errors: Duplicated IP",
                    "fullTitle": "Agents POST/agents/insert IP Automatic Errors: Duplicated IP",
                    "timedOut": false,
                    "duration": 271,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n.post(\"/agents/insert\")\n.send({'name':'NewAgentPostInsert3', 'id':'756', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    if (is_auth_d_running()) res.body.error.should.equal(9007);\n    else                     res.body.error.should.equal(1706);\n    done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ea9d57a3-e65f-449b-83dd-1712958f7b91",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "eb18524c-e2fa-488a-abf7-b37f8f50d117",
                  "ea9d57a3-e65f-449b-83dd-1712958f7b91"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 551,
                "root": false,
                "rootEmpty": false,
                "_timeout": 10000
              },
              {
                "uuid": "b3330f04-2f7d-46db-9d28-4280fab14110",
                "title": "IP",
                "fullFile": "/wazuh-api/test/test_agents_2.js",
                "file": "/test/test_agents_2.js",
                "beforeHooks": [],
                "afterHooks": [
                  {
                    "title": "\"after each\" hook",
                    "fullTitle": "Agents POST/agents/insert IP \"after each\" hook",
                    "timedOut": false,
                    "duration": 269,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "if (agent_id != 0){\n    request(common.url)\n    .delete(\"/agents/\" + agent_id + '?purge')\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\",/json/)\n    .expect(200)\n    .end(function(err, res) {\n        if (err) return done(err);\n        done();\n      });\n}\nelse {\n    done();\n}",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c1b988cf-d7d5-48cd-83d7-9d1189a73b51",
                    "isHook": true,
                    "skipped": false
                  }
                ],
                "tests": [
                  {
                    "title": "Request",
                    "fullTitle": "Agents POST/agents/insert IP Request",
                    "timedOut": false,
                    "duration": 272,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'name':'NewAgentPostInsert4', 'ip':'192.246.247.249', 'id':'760', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(200)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'data']);\n                    // res.body.data.should.have.properties(['id', 'key']);\n                    res.body.error.should.equal(0);\n                    res.body.data.id.should.match(/^\\d+$/);\n                    res.body.data.key.should.match(/^[a-zA-Z0-9=]+/);\n                    agent_id = res.body.data.id;\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9525d730-dd2b-4760-afd4-74d3f2cb6482",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Bad IP",
                    "fullTitle": "Agents POST/agents/insert IP Filters: Bad IP",
                    "timedOut": false,
                    "duration": 77,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'name':'NewAgentPostInsert', 'ip':'192.246.247.d', 'id':'760', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(606);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bd6713a1-f465-427d-8b7a-f7a6b6b3d07b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Filters: Bad IP 2",
                    "fullTitle": "Agents POST/agents/insert IP Filters: Bad IP 2",
                    "timedOut": false,
                    "duration": 76,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "request(common.url)\n                .post(\"/agents/insert\")\n                .send({'name':'NewAgentPostInsert4', 'ip':'333.333.333.333', 'id':'760', 'key':'1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64'})\n                .auth(common.credentials.user, common.credentials.password)\n                .expect(\"Content-type\",/json/)\n                .expect(400)\n                .end(function(err,res){\n                    if (err) return done(err);\n                    res.body.should.have.properties(['error', 'message']);\n                    res.body.error.should.equal(606);\n                    done();\n                });",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ead59e9-a194-46bd-a699-57359bd29a10",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "9525d730-dd2b-4760-afd4-74d3f2cb6482",
                  "bd6713a1-f465-427d-8b7a-f7a6b6b3d07b",
                  "6ead59e9-a194-46bd-a699-57359bd29a10"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 425,
                "root": false,
                "rootEmpty": false,
                "_timeout": 10000
              }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2020
}