{
  "stats": {
    "suites": 12,
    "tests": 87,
    "passes": 87,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-08T12:19:13.408Z",
    "end": "2020-06-08T12:19:46.189Z",
    "duration": 32781,
    "testsRegistered": 87,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "689d6e6b-8316-41e6-92df-23ffb122b1d3",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "f9c5da31-58b8-4729-9097-a4287898288b",
        "title": "Rules",
        "fullFile": "/wazuh-api/test/test_rules.js",
        "file": "/test/test_rules.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "a6072fcc-2219-4c06-af07-279545e52f8a",
            "title": "GET/rules",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules Request",
                "timedOut": false,
                "duration": 465,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "634ed87d-c6e6-41e3-9ea0-bd96942b884f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules Pagination",
                "timedOut": false,
                "duration": 436,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.have.properties(rule_fields);\n    res.body.data.items[0].id.should.equal(1);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c7b4ad5f-4d27-4e45-b0eb-4c7f7a01a0a7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 434,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "0c778b77-746b-498e-b3a0-7aa84a0f9908",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules Sort",
                "timedOut": false,
                "duration": 440,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?sort=-file\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "81a25b4d-2585-4c65-83a9-41c64603cc80",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules Search",
                "timedOut": false,
                "duration": 575,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?search=wEb\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "bd25a807-5817-487d-a619-8ec8a6de6ecb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules Filters: Invalid filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4b449700-ba4d-4c03-ad47-e13a3641724b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter - Extra field",
                "fullTitle": "Rules GET/rules Filters: Invalid filter - Extra field",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?status=aCtIvE&random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "51b4f7fe-fb48-4436-92eb-533e0cbd3efa",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: status",
                "fullTitle": "Rules GET/rules Filters: status",
                "timedOut": false,
                "duration": 497,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?status=enabled\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "42204d02-cd51-466d-8762-3f17c6045b52",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: group",
                "fullTitle": "Rules GET/rules Filters: group",
                "timedOut": false,
                "duration": 527,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?group=web\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2c451176-0db0-489d-b880-dd2ff13c3926",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: level (1)",
                "fullTitle": "Rules GET/rules Filters: level (1)",
                "timedOut": false,
                "duration": 474,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?level=2\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "402f9496-8313-41af-9400-15c284104561",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: level (2)",
                "fullTitle": "Rules GET/rules Filters: level (2)",
                "timedOut": false,
                "duration": 615,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?level=2-8\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "67fb8035-9752-41c7-9450-6ed20eebd1a5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: path",
                "fullTitle": "Rules GET/rules Filters: path",
                "timedOut": false,
                "duration": 488,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?path=ruleset/rules\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "ce7ee0e7-5bff-41d4-adfe-3c0c40ac6977",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: file",
                "fullTitle": "Rules GET/rules Filters: file",
                "timedOut": false,
                "duration": 461,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?file=0350-amazon_rules.xml\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5c293a09-266e-40c8-abc9-e857528d627d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: pci",
                "fullTitle": "Rules GET/rules Filters: pci",
                "timedOut": false,
                "duration": 538,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?pci=11.4\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7e4a86a9-1705-402b-ae57-6b8d32ed7dfd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: gdpr",
                "fullTitle": "Rules GET/rules Filters: gdpr",
                "timedOut": false,
                "duration": 441,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?gdpr=II_5.1.f\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7d9185dd-fefb-4828-8633-850f3b1a3b24",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: hipaa",
                "fullTitle": "Rules GET/rules Filters: hipaa",
                "timedOut": false,
                "duration": 654,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?hipaa=164.312.b\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4ae50450-9fa9-47a6-a6c8-3ee9f6d20fef",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: nist-800-53",
                "fullTitle": "Rules GET/rules Filters: nist-800-53",
                "timedOut": false,
                "duration": 627,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?nist-800-53=AU.14\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "6d861aa8-bfbc-4ca9-a7d7-34eff48351f4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: tsc",
                "fullTitle": "Rules GET/rules Filters: tsc",
                "timedOut": false,
                "duration": 674,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?tsc=CC6.8\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "82dc1068-6a9b-447a-80fd-1f09ca6d67b2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: gpg13",
                "fullTitle": "Rules GET/rules Filters: gpg13",
                "timedOut": false,
                "duration": 450,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?gpg13=10.1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3daa1575-9d7b-4b45-ab97-85fbb4754c4f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: mitre",
                "fullTitle": "Rules GET/rules Filters: mitre",
                "timedOut": false,
                "duration": 455,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?mitre=T1110\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a9e4832c-1786-4d0e-9c92-5b39ac5b6906",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: query 1",
                "fullTitle": "Rules GET/rules Filters: query 1",
                "timedOut": false,
                "duration": 433,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?q=file~0010;id=2\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.have.properties(['items', 'totalItems']);\n    res.body.data.totalItems.should.equal(1);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.have.properties(rule_fields);\n    res.body.data.items[0].file.should.startWith('0010');\n    res.body.data.items[0].id.should.equal(2);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "6d2804f4-aa12-47d9-a894-34b2478fbfa0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: query 2",
                "fullTitle": "Rules GET/rules Filters: query 2",
                "timedOut": false,
                "duration": 433,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules?q=description~McAfee;level=12\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.have.properties(['items', 'totalItems']);\n    res.body.data.totalItems.should.equal(2);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.have.properties(rule_fields);\n    res.body.data.items[0].level.should.equal(12);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "ce29effc-9eaf-44e4-9fc2-1f6d363376ea",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "634ed87d-c6e6-41e3-9ea0-bd96942b884f",
              "c7b4ad5f-4d27-4e45-b0eb-4c7f7a01a0a7",
              "0c778b77-746b-498e-b3a0-7aa84a0f9908",
              "81a25b4d-2585-4c65-83a9-41c64603cc80",
              "bd25a807-5817-487d-a619-8ec8a6de6ecb",
              "4b449700-ba4d-4c03-ad47-e13a3641724b",
              "51b4f7fe-fb48-4436-92eb-533e0cbd3efa",
              "42204d02-cd51-466d-8762-3f17c6045b52",
              "2c451176-0db0-489d-b880-dd2ff13c3926",
              "402f9496-8313-41af-9400-15c284104561",
              "67fb8035-9752-41c7-9450-6ed20eebd1a5",
              "ce7ee0e7-5bff-41d4-adfe-3c0c40ac6977",
              "5c293a09-266e-40c8-abc9-e857528d627d",
              "7e4a86a9-1705-402b-ae57-6b8d32ed7dfd",
              "7d9185dd-fefb-4828-8633-850f3b1a3b24",
              "4ae50450-9fa9-47a6-a6c8-3ee9f6d20fef",
              "6d861aa8-bfbc-4ca9-a7d7-34eff48351f4",
              "82dc1068-6a9b-447a-80fd-1f09ca6d67b2",
              "3daa1575-9d7b-4b45-ab97-85fbb4754c4f",
              "a9e4832c-1786-4d0e-9c92-5b39ac5b6906",
              "6d2804f4-aa12-47d9-a894-34b2478fbfa0",
              "ce29effc-9eaf-44e4-9fc2-1f6d363376ea"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 10271,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "db0db092-491c-45f0-bc48-4eaf91b0830b",
            "title": "GET/rules/groups",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/groups Request",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/groups\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "6b45d549-ad7b-457c-8840-012a27fd7583",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/groups Pagination",
                "timedOut": false,
                "duration": 425,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/groups?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "03c7cebd-a2ed-4854-9cab-bbd720810360",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/groups Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 426,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/groups?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "adfc2399-304f-4237-855e-19f1289fc5a7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/groups Sort",
                "timedOut": false,
                "duration": 423,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/groups?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4ff8e1e1-40c2-46a1-850b-17bc7c17304d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/groups Search",
                "timedOut": false,
                "duration": 422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/groups?search=wEb\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "cd285cb5-b656-4b79-beb4-265f008e36d4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/groups Filters: Invalid filter",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/groups?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "61bca8c1-d528-4d28-8b71-2162319ada21",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6b45d549-ad7b-457c-8840-012a27fd7583",
              "03c7cebd-a2ed-4854-9cab-bbd720810360",
              "adfc2399-304f-4237-855e-19f1289fc5a7",
              "4ff8e1e1-40c2-46a1-850b-17bc7c17304d",
              "cd285cb5-b656-4b79-beb4-265f008e36d4",
              "61bca8c1-d528-4d28-8b71-2162319ada21"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2200,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "18df06ca-3170-4a5e-9311-9220a5ef07b6",
            "title": "GET/rules/pci",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/pci Request",
                "timedOut": false,
                "duration": 432,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/pci\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d1d634a3-8c3c-4ecb-b87b-303ab50ee744",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/pci Pagination",
                "timedOut": false,
                "duration": 424,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/pci?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c1ff2965-1a1b-43d3-830e-950bf345ce2d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/pci Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 426,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/pci?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "ca0b7676-150e-48ff-8803-bd4dbf29d4a8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/pci Sort",
                "timedOut": false,
                "duration": 425,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/pci?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c1927314-554b-409b-b765-e01630c05f17",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/pci Search",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/pci?search=10\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "05b0e3ef-9275-4fc9-8d48-7e66e541ddf2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/pci Filters: Invalid filter",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/pci?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "656e9ece-2350-4134-9ad0-9abb09e4a154",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d1d634a3-8c3c-4ecb-b87b-303ab50ee744",
              "c1ff2965-1a1b-43d3-830e-950bf345ce2d",
              "ca0b7676-150e-48ff-8803-bd4dbf29d4a8",
              "c1927314-554b-409b-b765-e01630c05f17",
              "05b0e3ef-9275-4fc9-8d48-7e66e541ddf2",
              "656e9ece-2350-4134-9ad0-9abb09e4a154"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2211,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "8dfb8da3-b5ce-4c92-8354-3429b92f0d2f",
            "title": "GET/rules/gdpr",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/gdpr Request",
                "timedOut": false,
                "duration": 425,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gdpr\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5c550c6c-1a44-4bc3-a692-565f48b85cd8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/gdpr Pagination",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gdpr?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "051fb861-5f18-4915-84a5-37fa82be49ca",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/gdpr Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gdpr?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5f87fe89-66c2-41ef-8e40-1d4d63872d7c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/gdpr Sort",
                "timedOut": false,
                "duration": 429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gdpr?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b43e75ce-b51e-48c1-9192-a138035c19de",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/gdpr Search",
                "timedOut": false,
                "duration": 429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gdpr?search=30\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2c6b8f02-7f74-4f9c-99ce-36ece7a0f620",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/gdpr Filters: Invalid filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gdpr?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d7a1fa64-7c10-489f-8282-8d3e0b7a83ee",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5c550c6c-1a44-4bc3-a692-565f48b85cd8",
              "051fb861-5f18-4915-84a5-37fa82be49ca",
              "5f87fe89-66c2-41ef-8e40-1d4d63872d7c",
              "b43e75ce-b51e-48c1-9192-a138035c19de",
              "2c6b8f02-7f74-4f9c-99ce-36ece7a0f620",
              "d7a1fa64-7c10-489f-8282-8d3e0b7a83ee"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2210,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "6c06fb85-adfc-4fb7-9cfa-a02c2fdf638e",
            "title": "GET/rules/gpg13",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/gpg13 Request",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gpg13\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "01261b0e-19b7-4c3e-9673-75562de27eda",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/gpg13 Pagination",
                "timedOut": false,
                "duration": 425,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gpg13?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a740b39a-0410-402d-9b1e-a7e2bdbd51d1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/gpg13 Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gpg13?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3836969f-b9e9-4feb-91c8-72b57a63b665",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/gpg13 Sort",
                "timedOut": false,
                "duration": 427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gpg13?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f0d8a499-07a8-486f-b0f7-594ae6f4ed99",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/gpg13 Search",
                "timedOut": false,
                "duration": 444,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gpg13?search=10.1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "94a316da-308f-41c2-9882-1cbab21dd06e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/gpg13 Filters: Invalid filter",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/gpg13?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d6e3971b-5c74-4c92-b6fe-c7a755072f19",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "01261b0e-19b7-4c3e-9673-75562de27eda",
              "a740b39a-0410-402d-9b1e-a7e2bdbd51d1",
              "3836969f-b9e9-4feb-91c8-72b57a63b665",
              "f0d8a499-07a8-486f-b0f7-594ae6f4ed99",
              "94a316da-308f-41c2-9882-1cbab21dd06e",
              "d6e3971b-5c74-4c92-b6fe-c7a755072f19"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2231,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "70d53ae6-d148-4bbe-b6bd-45413689d947",
            "title": "GET/rules/hipaa",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/hipaa Request",
                "timedOut": false,
                "duration": 425,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/hipaa\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "077be70f-3e92-46f5-a162-511127cc0614",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/hipaa Pagination",
                "timedOut": false,
                "duration": 442,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/hipaa?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "e3d4b8b7-397d-4252-b337-cacf4f7c90bd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/hipaa Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 426,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/hipaa?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b381c628-ff6f-4f72-a10b-a86aefd6b6ce",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/hipaa Sort",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/hipaa?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f42556aa-501d-40cb-82fd-a8a372dcb8f3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/hipaa Search",
                "timedOut": false,
                "duration": 427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/hipaa?search=164\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a6d99e82-f681-4487-a8c3-2ddd4a8c46f5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/hipaa Filters: Invalid filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/hipaa?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d626fc4e-2e1f-43c4-808b-b4a53366e3f1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "077be70f-3e92-46f5-a162-511127cc0614",
              "e3d4b8b7-397d-4252-b337-cacf4f7c90bd",
              "b381c628-ff6f-4f72-a10b-a86aefd6b6ce",
              "f42556aa-501d-40cb-82fd-a8a372dcb8f3",
              "a6d99e82-f681-4487-a8c3-2ddd4a8c46f5",
              "d626fc4e-2e1f-43c4-808b-b4a53366e3f1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2225,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "414f095e-3005-4101-a3e8-d8be11dbbfb6",
            "title": "GET/rules/nist-800-53",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/nist-800-53 Request",
                "timedOut": false,
                "duration": 425,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/nist-800-53\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5ba55baa-73f8-4f5b-9858-638e8b0c4a18",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/nist-800-53 Pagination",
                "timedOut": false,
                "duration": 427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/nist-800-53?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "aa2406f2-1f35-42e7-8fee-2a70d30cf1f9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/nist-800-53 Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 430,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/nist-800-53?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "79b0c00a-4d91-4f0b-8cd3-9abc50d96c66",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/nist-800-53 Sort",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/nist-800-53?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d13fd93a-a1b7-4f65-a842-111739ee9ea4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/nist-800-53 Search",
                "timedOut": false,
                "duration": 436,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/nist-800-53?search=AU\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "61331380-9c61-469e-98eb-69df7db3380d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/nist-800-53 Filters: Invalid filter",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/nist-800-53?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "61705894-2eab-43be-ab87-5002ef38c82b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5ba55baa-73f8-4f5b-9858-638e8b0c4a18",
              "aa2406f2-1f35-42e7-8fee-2a70d30cf1f9",
              "79b0c00a-4d91-4f0b-8cd3-9abc50d96c66",
              "d13fd93a-a1b7-4f65-a842-111739ee9ea4",
              "61331380-9c61-469e-98eb-69df7db3380d",
              "61705894-2eab-43be-ab87-5002ef38c82b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2222,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "57508e88-ed61-4283-baf2-67c2ed2c4e53",
            "title": "GET/rules/mitre",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/mitre Request",
                "timedOut": false,
                "duration": 425,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/mitre\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2d682939-6349-4236-8ede-c22f158ca46c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/mitre Pagination",
                "timedOut": false,
                "duration": 422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/mitre?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "115ceff9-3ecb-4226-ab2c-53bed623de8d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/mitre Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/mitre?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1714ca45-a683-4b4d-84ec-a8c259933236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/mitre Sort",
                "timedOut": false,
                "duration": 438,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/mitre?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "87f82d90-25d3-494f-a4fd-26d6de7cb959",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/mitre Search",
                "timedOut": false,
                "duration": 433,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/mitre?search=T1110\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f7009a42-5956-4444-88c0-f9cba3420fac",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/mitre Filters: Invalid filter",
                "timedOut": false,
                "duration": 81,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/mitre?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d719650b-cbca-4a04-9d50-bbe0ff0183df",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2d682939-6349-4236-8ede-c22f158ca46c",
              "115ceff9-3ecb-4226-ab2c-53bed623de8d",
              "1714ca45-a683-4b4d-84ec-a8c259933236",
              "87f82d90-25d3-494f-a4fd-26d6de7cb959",
              "f7009a42-5956-4444-88c0-f9cba3420fac",
              "d719650b-cbca-4a04-9d50-bbe0ff0183df"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2227,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "b2db30fa-ee68-46a5-8d0a-b6afaf5918c5",
            "title": "GET/rules/tsc",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/tsc Request",
                "timedOut": false,
                "duration": 430,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/tsc\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5e701862-fd23-4e90-80dc-22adfc193ae7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/tsc Pagination",
                "timedOut": false,
                "duration": 433,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/tsc?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "cca753d4-ad71-49a8-8fb3-e1129384c3e0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/tsc Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/tsc?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c7e3d43b-8b7b-40ff-b3f5-1fe16496adc8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/tsc Sort",
                "timedOut": false,
                "duration": 423,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/tsc?sort=-\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2b8d6f32-70c6-422a-8eef-9deb7b1b1f89",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/tsc Search",
                "timedOut": false,
                "duration": 422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/tsc?search=CC\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.be.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b09292c2-cfbc-4aa4-87ec-079958a6729b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/tsc Filters: Invalid filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/tsc?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4684d998-655c-4449-9609-1917982dadb6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5e701862-fd23-4e90-80dc-22adfc193ae7",
              "cca753d4-ad71-49a8-8fb3-e1129384c3e0",
              "c7e3d43b-8b7b-40ff-b3f5-1fe16496adc8",
              "2b8d6f32-70c6-422a-8eef-9deb7b1b1f89",
              "b09292c2-cfbc-4aa4-87ec-079958a6729b",
              "4684d998-655c-4449-9609-1917982dadb6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2213,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "f7b62091-0fa6-422c-9f50-4077aa56adcd",
            "title": "GET/rules/files",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/files Request",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(['status', 'file', 'path']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "39104393-5f65-4d23-ba89-dc829e5bd823",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/files Pagination",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.have.properties(['status', 'file', 'path']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "803694e7-d1c4-4290-906e-0bb56a6df6f6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/files Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "48cb5b3e-6dca-4981-ba9a-0c26ee635807",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/files Sort",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?sort=-file\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(['status', 'file', 'path']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d18c6604-45c3-41d2-9f25-da3ea1fc391e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/files Search",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?search=wEb\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(['status', 'file', 'path']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "987fa948-bfdd-4178-b864-e25ba69604a6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/files Filters: Invalid filter",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "88f99264-3dd0-4002-85e8-48caa7a7f098",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter - Extra field",
                "fullTitle": "Rules GET/rules/files Filters: Invalid filter - Extra field",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?status=enabled&random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "0b5cf6d5-6dc7-433b-bbcc-1c1ebcd09453",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: status",
                "fullTitle": "Rules GET/rules/files Filters: status",
                "timedOut": false,
                "duration": 272,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?search=enabled\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(['status', 'file', 'path']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "8672988e-360c-4a7f-aa40-da61c5917200",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: download",
                "fullTitle": "Rules GET/rules/files Filters: download",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/files?download=0350-amazon_rules.xml\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",\"text/xml\")\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3e96adba-f574-4124-8d04-7196296dc19f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "39104393-5f65-4d23-ba89-dc829e5bd823",
              "803694e7-d1c4-4290-906e-0bb56a6df6f6",
              "48cb5b3e-6dca-4981-ba9a-0c26ee635807",
              "d18c6604-45c3-41d2-9f25-da3ea1fc391e",
              "987fa948-bfdd-4178-b864-e25ba69604a6",
              "88f99264-3dd0-4002-85e8-48caa7a7f098",
              "0b5cf6d5-6dc7-433b-bbcc-1c1ebcd09453",
              "8672988e-360c-4a7f-aa40-da61c5917200",
              "3e96adba-f574-4124-8d04-7196296dc19f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2045,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "f7fc3960-f076-4445-a426-88303e4e88dd",
            "title": "GET/rules/:rule_id",
            "fullFile": "/wazuh-api/test/test_rules.js",
            "file": "/test/test_rules.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Rules GET/rules/:rule_id Request",
                "timedOut": false,
                "duration": 417,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/1002\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array);\n    res.body.data.items[0].should.have.properties(rule_fields);\n    res.body.data.items[0].id.should.equal(1002);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "96493dbf-2789-462e-9e79-83242b7a6e2a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Rules GET/rules/:rule_id Pagination",
                "timedOut": false,
                "duration": 421,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/1002?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    res.body.data.items[0].should.have.properties(rule_fields);\n    res.body.data.items[0].id.should.equal(1002);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "9ad48d59-8181-4319-9f07-fc83b492584c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Rules GET/rules/:rule_id Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/1002?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "346c8549-5f59-42d3-81a7-be43c4e2fda4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Rules GET/rules/:rule_id Sort",
                "timedOut": false,
                "duration": 422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/1002?sort=-file\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    res.body.data.items[0].id.should.equal(1002);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d8bf2e80-fccc-45a1-8a45-15568d45b58a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Rules GET/rules/:rule_id Search",
                "timedOut": false,
                "duration": 420,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/1002?search=error\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items[0].should.have.properties(rule_fields);\n    res.body.data.items[0].id.should.equal(1002);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "9b217d10-636f-40ac-a8c5-b590b5893361",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Rules GET/rules/:rule_id Filters: Invalid filter",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/1002?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1639b5c4-5b7e-49b5-90a3-c6b2751dccb0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Params: Bad rule id",
                "fullTitle": "Rules GET/rules/:rule_id Params: Bad rule id",
                "timedOut": false,
                "duration": 75,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/abc\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(600);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2010293f-3ef6-4519-8c3a-6b110988a153",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Params: No rule",
                "fullTitle": "Rules GET/rules/:rule_id Params: No rule",
                "timedOut": false,
                "duration": 417,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/rules/9999991919\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array)\n    res.body.data.items.should.be.empty;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "45405c69-836a-44b2-b460-d8e61ede40fd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "96493dbf-2789-462e-9e79-83242b7a6e2a",
              "9ad48d59-8181-4319-9f07-fc83b492584c",
              "346c8549-5f59-42d3-81a7-be43c4e2fda4",
              "d8bf2e80-fccc-45a1-8a45-15568d45b58a",
              "9b217d10-636f-40ac-a8c5-b590b5893361",
              "1639b5c4-5b7e-49b5-90a3-c6b2751dccb0",
              "2010293f-3ef6-4519-8c3a-6b110988a153",
              "45405c69-836a-44b2-b460-d8e61ede40fd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2675,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2020
}