{
  "stats": {
    "suites": 18,
    "tests": 92,
    "passes": 90,
    "pending": 0,
    "failures": 2,
    "start": "2020-06-08T12:18:34.862Z",
    "end": "2020-06-08T12:19:00.227Z",
    "duration": 25365,
    "testsRegistered": 92,
    "passPercent": 97.8,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "23cd94fa-c1da-460d-9af5-3557d6ab1e39",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "7bc1803e-7f19-4f18-ac50-7ff379fa7a2e",
        "title": "Manager",
        "fullFile": "/wazuh-api/test/test_manager.js",
        "file": "/test/test_manager.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "7cd668e5-add6-433a-80a9-f706b7be8c09",
            "title": "GET/manager/status",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/status Request",
                "timedOut": false,
                "duration": 716,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/status\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.have.properties(['ossec-agentlessd', 'ossec-analysisd', 'ossec-authd', 'ossec-csyslogd', 'ossec-dbd', 'ossec-monitord',\n                                          'ossec-execd', 'ossec-integratord', 'ossec-logcollector', 'ossec-maild', 'ossec-remoted',\n                                          'ossec-reportd', 'ossec-syscheckd', 'wazuh-clusterd', 'wazuh-modulesd', 'wazuh-db']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c8f2185b-74c9-411f-8d78-8bab4bfbc7a4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c8f2185b-74c9-411f-8d78-8bab4bfbc7a4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 716,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "1107bf2c-93fb-4a75-81dd-7cdb11411884",
            "title": "GET/manager/info",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/info Request",
                "timedOut": false,
                "duration": 672,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/info\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.have.properties(['path', 'compilation_date', 'version', 'type']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a7c7a6c6-7881-4e0a-b140-453b71d722fc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a7c7a6c6-7881-4e0a-b140-453b71d722fc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 672,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "bc129638-3e2d-403f-8b31-bbf417eb70c4",
            "title": "GET/manager/configuration",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/configuration Request",
                "timedOut": false,
                "duration": 511,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.have.properties(['global', 'ruleset', 'syscheck', 'rootcheck', 'remote', 'localfile']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3fd9f7fb-149c-40c7-b799-edb5e7297ca3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Missing field section",
                "fullTitle": "Manager GET/manager/configuration Filters: Missing field section",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration?field=hi\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    res.body.message.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "094c776d-0082-4035-9a8e-54e3e6efebd3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Section",
                "fullTitle": "Manager GET/manager/configuration Filters: Section",
                "timedOut": false,
                "duration": 293,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration?section=ruleset\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.have.properties(['decoder_dir', 'rule_dir', 'rule_exclude', 'list']);\n    res.body.data.rule_dir.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7cff2516-d870-4dc1-a942-d37a00821a00",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Errors: Invalid Section",
                "fullTitle": "Manager GET/manager/configuration Errors: Invalid Section",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration?section=rulesa\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1102);\n    res.body.message.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1f9827dc-f718-42c9-8fe0-77a2d70b3e2f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Section - field",
                "fullTitle": "Manager GET/manager/configuration Filters: Section - field",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration?section=ruleset&field=rule_dir\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "03d05930-953f-42fc-b334-f7f00439a8b7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Errors: Invalid field",
                "fullTitle": "Manager GET/manager/configuration Errors: Invalid field",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration?section=ruleset&field=includedd\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1103);\n    res.body.message.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a5536ef0-6d4b-4f0b-b3f3-98c448c8659d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Manager GET/manager/configuration Filters: Invalid filter",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "582a6b97-579a-4043-83a1-5d6544962316",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter - Extra field",
                "fullTitle": "Manager GET/manager/configuration Filters: Invalid filter - Extra field",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/configuration?section=ruleset&field=rule_dir&random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "48fc1685-8bea-4644-8f22-172fd66b86c1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3fd9f7fb-149c-40c7-b799-edb5e7297ca3",
              "094c776d-0082-4035-9a8e-54e3e6efebd3",
              "7cff2516-d870-4dc1-a942-d37a00821a00",
              "1f9827dc-f718-42c9-8fe0-77a2d70b3e2f",
              "03d05930-953f-42fc-b334-f7f00439a8b7",
              "a5536ef0-6d4b-4f0b-b3f3-98c448c8659d",
              "582a6b97-579a-4043-83a1-5d6544962316",
              "48fc1685-8bea-4644-8f22-172fd66b86c1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1865,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "7a552a3f-cc18-414f-b6a7-c8851e26b6dd",
            "title": "GET/manager/stats",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/stats Request",
                "timedOut": false,
                "duration": 273,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.instanceof(Array)\n    done();\n});",
                "err": {
                  "message": "AssertionError: expected Object { error: 1308, message: 'Stats file has not been created yet' } to have property data",
                  "estack": "AssertionError: expected Object { error: 1308, message: 'Stats file has not been created yet' } to have property data\n    at Assertion.fail (node_modules/should/cjs/should.js:258:17)\n    at Assertion.value [as properties] (node_modules/should/cjs/should.js:335:19)\n    at Test.<anonymous> (test/test_manager.js:226:38)\n    at Test.assert (node_modules/supertest/lib/test.js:181:6)\n    at localAssert (node_modules/supertest/lib/test.js:131:12)\n    at /wazuh-api/node_modules/supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /wazuh-api/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1221:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "852db29a-f35f-4514-8e0b-a0e927c234a8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: date",
                "fullTitle": "Manager GET/manager/stats Filters: date",
                "timedOut": false,
                "duration": 272,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "var moment = require('moment');\ndate = moment().format('YYYYMMDD')\nrequest(common.url)\n.get(\"/manager/stats?date=\" + date)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.instanceof(Array)\n    done();\n});",
                "err": {
                  "message": "AssertionError: expected Object { error: 1308, message: 'Stats file has not been created yet' } to have property data",
                  "estack": "AssertionError: expected Object { error: 1308, message: 'Stats file has not been created yet' } to have property data\n    at Assertion.fail (node_modules/should/cjs/should.js:258:17)\n    at Assertion.value [as properties] (node_modules/should/cjs/should.js:335:19)\n    at Test.<anonymous> (test/test_manager.js:246:38)\n    at Test.assert (node_modules/supertest/lib/test.js:181:6)\n    at localAssert (node_modules/supertest/lib/test.js:131:12)\n    at /wazuh-api/node_modules/supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /wazuh-api/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1221:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "0a6f67d9-b401-430f-9556-673045ce1ef6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid date",
                "fullTitle": "Manager GET/manager/stats Filters: Invalid date",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats?date=2016/07/07\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(605);\n    res.body.message.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f389643e-c383-4c1e-bd42-df5e31ab6034",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Manager GET/manager/stats Filters: Invalid filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "cade1a04-936e-4597-9eab-6c5302fdddd0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter - Extra field",
                "fullTitle": "Manager GET/manager/stats Filters: Invalid filter - Extra field",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats?date=20160707&random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "844569c6-b28f-4827-a343-133b15f5bbb6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f389643e-c383-4c1e-bd42-df5e31ab6034",
              "cade1a04-936e-4597-9eab-6c5302fdddd0",
              "844569c6-b28f-4827-a343-133b15f5bbb6"
            ],
            "failures": [
              "852db29a-f35f-4514-8e0b-a0e927c234a8",
              "0a6f67d9-b401-430f-9556-673045ce1ef6"
            ],
            "pending": [],
            "skipped": [],
            "duration": 774,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "9c3c46ca-8dbd-4af4-9711-e40b9117b054",
            "title": "GET/manager/stats/hourly",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/stats/hourly Request",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats/hourly\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.have.properties(['averages', 'interactions']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d604be83-cf12-47a4-bafa-50667128c90f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d604be83-cf12-47a4-bafa-50667128c90f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 267,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "727ea971-e4f6-4379-9a12-cf924116838f",
            "title": "GET/manager/stats/weekly",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/stats/weekly Request",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats/weekly\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "e278fc89-8968-4ec6-b578-c696faf60cb7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e278fc89-8968-4ec6-b578-c696faf60cb7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 269,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "13525ef4-fd7d-4aa1-a87c-d2cf16e6fe46",
            "title": "GET/manager/stats/analysisd",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/stats/analysisd Request",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats/analysisd\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.have.properties(['archives_queue_size',\n    'events_dropped', 'alerts_queue_size', 'rule_matching_queue_usage',\n    'events_processed', 'event_queue_usage', 'events_edps',\n    'hostinfo_events_decoded', 'syscollector_events_decoded',\n    'rootcheck_edps', 'firewall_queue_usage', 'alerts_queue_usage',\n    'firewall_queue_size', 'alerts_written', 'firewall_written',\n    'syscheck_queue_size', 'events_received', 'rootcheck_queue_usage',\n    'rootcheck_events_decoded', 'rootcheck_queue_size', 'syscheck_edps',\n    'fts_written', 'syscheck_queue_usage', 'other_events_edps',\n    'statistical_queue_usage', 'hostinfo_edps', 'hostinfo_queue_usage',\n    'syscheck_events_decoded', 'syscheck_events_decoded', 'archives_queue_usage',\n    'statistical_queue_size', 'total_events_decoded', 'hostinfo_queue_size',\n    'syscollector_queue_size', 'rule_matching_queue_size',\n    'other_events_decoded', 'event_queue_size', 'syscollector_edps']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c5c88324-9e60-478a-af21-eac65f0c573c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c5c88324-9e60-478a-af21-eac65f0c573c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 269,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "4bb991b8-954a-4cad-8aa0-e2c3c29e069f",
            "title": "GET/manager/stats/remoted",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/stats/remoted Request",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/stats/remoted\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.have.properties(['discarded_count',\n    'msg_sent', 'queue_size', 'ctrl_msg_count', 'evt_count',\n    'tcp_sessions', 'total_queue_size']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "251cdb38-f89e-45c9-82f3-7f76ce9e99fd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "251cdb38-f89e-45c9-82f3-7f76ce9e99fd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 268,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "5112889e-00f1-48bc-a6f9-81281ac02e09",
            "title": "GET/manager/logs",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/logs Request",
                "timedOut": false,
                "duration": 329,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "9eca8965-c8e9-4b70-8bd4-c26c9d57ede4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Manager GET/manager/logs Pagination",
                "timedOut": false,
                "duration": 317,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?offset=0&limit=1\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "aaae77a7-0ea7-49a8-88e8-f9ca8d4a4970",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Retrieve all elements with limit=0",
                "fullTitle": "Manager GET/manager/logs Retrieve all elements with limit=0",
                "timedOut": false,
                "duration": 327,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?limit=0\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1406);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "db52b7da-47ab-4022-8b3f-ce803cbf96e8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort",
                "fullTitle": "Manager GET/manager/logs Sort",
                "timedOut": false,
                "duration": 327,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?sort=+\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b4333c61-22ef-4306-add5-64fd41eb5793",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "SortField",
                "fullTitle": "Manager GET/manager/logs SortField",
                "timedOut": false,
                "duration": 326,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?sort=+level\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "0d9990f7-46fb-43da-9591-63089400d86b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Manager GET/manager/logs Search",
                "timedOut": false,
                "duration": 333,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?search=info\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f13ddfa5-bea1-406c-bb76-9a9dc55c6c29",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: type_log",
                "fullTitle": "Manager GET/manager/logs Filters: type_log",
                "timedOut": false,
                "duration": 324,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?type_log=info\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "124fb0b8-8e9b-46e1-bd42-78b3d755208b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: category",
                "fullTitle": "Manager GET/manager/logs Filters: category",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?category=ossec-monitord\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7ad69553-5243-4f41-a8f6-70e21d7c233b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: type_log and category",
                "fullTitle": "Manager GET/manager/logs Filters: type_log and category",
                "timedOut": false,
                "duration": 305,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?type_log=info&category=ossec-analysisd\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.totalItems.should.be.above(0);\n    res.body.data.items.should.be.instanceof(Array)\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "26d6a4ca-5b9a-44fb-8277-bee7c7f30717",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter",
                "fullTitle": "Manager GET/manager/logs Filters: Invalid filter",
                "timedOut": false,
                "duration": 82,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "8b8d6995-1627-4332-b52e-c2dbab2a3659",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: Invalid filter - Extra field",
                "fullTitle": "Manager GET/manager/logs Filters: Invalid filter - Extra field",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?category=all&random\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(604);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "478cd85e-81fe-49ce-925e-4249e5286618",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: query 1",
                "fullTitle": "Manager GET/manager/logs Filters: query 1",
                "timedOut": false,
                "duration": 322,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?q=tag=ossec-analysisd;level=info&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['items', 'totalItems']);\n        res.body.data.items.should.be.instanceof(Array);\n        res.body.data.totalItems.should.be.instanceof(Number);\n        res.body.data.items[0].should.have.properties(['timestamp', 'tag', 'level', 'description']);\n        res.body.data.items[0].tag.should.be.equal('ossec-analysisd');\n        res.body.data.items[0].level.should.be.equal('info');\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8a3873a2-bfcf-4d83-8f11-9255be1f4b04",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: query 2",
                "fullTitle": "Manager GET/manager/logs Filters: query 2",
                "timedOut": false,
                "duration": 327,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?q=tag=ossec-execd;level=info&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['items', 'totalItems']);\n        res.body.data.items.should.be.instanceof(Array);\n        res.body.data.totalItems.should.be.instanceof(Number);\n        res.body.data.items[0].should.have.properties(['timestamp', 'tag', 'level', 'description']);\n        res.body.data.items[0].tag.should.be.equal('ossec-execd');\n        res.body.data.items[0].level.should.be.equal('info');\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "60dd2d72-29ed-4182-b866-2602b0db0293",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: query 3",
                "fullTitle": "Manager GET/manager/logs Filters: query 3",
                "timedOut": false,
                "duration": 326,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?q=tag~ossec;level=error&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['items', 'totalItems']);\n        res.body.data.items.should.be.instanceof(Array);\n        res.body.data.totalItems.should.be.instanceof(Number);\n        res.body.data.items[0].should.have.properties(['timestamp', 'tag', 'level', 'description']);\n        res.body.data.items[0].tag.should.startWith('ossec');\n        res.body.data.items[0].level.should.be.equal('error');\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "31053e7c-02c1-4882-b52e-f13f129704b3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filters: wrong query",
                "fullTitle": "Manager GET/manager/logs Filters: wrong query",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs?q=ossec-analysisd\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(622);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "dd42a637-a3a2-44ec-95d2-4347b654682c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9eca8965-c8e9-4b70-8bd4-c26c9d57ede4",
              "aaae77a7-0ea7-49a8-88e8-f9ca8d4a4970",
              "db52b7da-47ab-4022-8b3f-ce803cbf96e8",
              "b4333c61-22ef-4306-add5-64fd41eb5793",
              "0d9990f7-46fb-43da-9591-63089400d86b",
              "f13ddfa5-bea1-406c-bb76-9a9dc55c6c29",
              "124fb0b8-8e9b-46e1-bd42-78b3d755208b",
              "7ad69553-5243-4f41-a8f6-70e21d7c233b",
              "26d6a4ca-5b9a-44fb-8277-bee7c7f30717",
              "8b8d6995-1627-4332-b52e-c2dbab2a3659",
              "478cd85e-81fe-49ce-925e-4249e5286618",
              "8a3873a2-bfcf-4d83-8f11-9255be1f4b04",
              "60dd2d72-29ed-4182-b866-2602b0db0293",
              "31053e7c-02c1-4882-b52e-f13f129704b3",
              "dd42a637-a3a2-44ec-95d2-4347b654682c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4109,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "5a7fdfef-8a10-455a-bd0d-982c6810cc3b",
            "title": "GET/manager/logs/summary",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager GET/manager/logs/summary Request",
                "timedOut": false,
                "duration": 304,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/logs/summary\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.Object;\n    res.body.data.should.have.properties(['ossec-monitord']);\n    res.body.data['ossec-monitord'].should.have.properties(['info', 'all', 'error']);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4eaa060a-47ce-4f4c-961b-d4590ae65761",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4eaa060a-47ce-4f4c-961b-d4590ae65761"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 304,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "27946198-e2a1-458c-a051-8da883a15b2b",
            "title": "POST/manager/files",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Manager POST/manager/files \"before all\" hook",
                "timedOut": false,
                "duration": 267,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/manager/files?path=\" + path_ossec_conf)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.be.an.string;\n        ossec_conf_content = res.body.data\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7a71fbf5-0df5-49e6-a034-f75a96841543",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Upload ossec.conf",
                "fullTitle": "Manager POST/manager/files Upload ossec.conf",
                "timedOut": false,
                "duration": 295,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_ossec_conf + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/xml\")\n.send(ossec_conf_content)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "41942cea-d0c7-4fd4-a124-e2578ba147a7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload ossec.conf (overwrite=false)",
                "fullTitle": "Manager POST/manager/files Upload ossec.conf (overwrite=false)",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_ossec_conf + \"&overwrite=false\")\n.set(\"Content-Type\", \"application/xml\")\n.send(ossec_conf_content)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1905);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "a927687d-2846-4b65-84d9-4525dae56b2b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload rules (new rule)",
                "fullTitle": "Manager POST/manager/files Upload rules (new rule)",
                "timedOut": false,
                "duration": 279,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_rules + '&overwrite=true')\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!-- Local rules -->\\n  <!-- Modify it at your will. -->\\n  <!-- Example -->\\n  <group name=\\\"local,\\\">\\n    <!--   NEW RULE    -->\\n    <rule id=\\\"111111\\\" level=\\\"5\\\">\\n      <if_sid>5716</if_sid>\\n      <srcip>1.1.1.1</srcip>\\n      <description>sshd: authentication failed from IP 1.1.1.1.</description>\\n      <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\\n    </rule>\\n  </group>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "f23cd5b3-3f09-48d2-9c34-784ede4b17b5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload rules (overwrite=true)",
                "fullTitle": "Manager POST/manager/files Upload rules (overwrite=true)",
                "timedOut": false,
                "duration": 281,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_rules + '&overwrite=true')\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!-- Local rules -->\\n  <!-- Modify it at your will. -->\\n  <!-- Example -->\\n  <group name=\\\"local,\\\">\\n    <!--   NEW RULE    -->\\n    <rule id=\\\"111111\\\" level=\\\"5\\\">\\n      <if_sid>5716</if_sid>\\n      <srcip>1.1.1.1</srcip>\\n      <description>sshd: authentication failed from IP 1.1.1.1.</description>\\n      <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\\n    </rule>\\n  </group>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "ac2e7a7b-4a94-4fa4-92a8-f23064076b89",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload rules (overwrite=false)",
                "fullTitle": "Manager POST/manager/files Upload rules (overwrite=false)",
                "timedOut": false,
                "duration": 274,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_rules + '&overwrite=false')\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!-- Local rules -->\\n  <!-- Modify it at your will. -->\\n  <!-- Example -->\\n  <group name=\\\"local,\\\">\\n    <!--   NEW RULE    -->\\n    <rule id=\\\"111111\\\" level=\\\"5\\\">\\n      <if_sid>5716</if_sid>\\n      <srcip>1.1.1.1</srcip>\\n      <description>sshd: authentication failed from IP 1.1.1.1.</description>\\n      <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\\n    </rule>\\n  </group>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1905);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "341dc515-4db2-47e5-a453-ca6e8e5e01b0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload decoder (overwrite=true)",
                "fullTitle": "Manager POST/manager/files Upload decoder (overwrite=true)",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_decoders + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!-- NEW Local Decoders -->\\n  <!-- Modify it at your will. -->\\n  <decoder name=\\\"local_decoder_example\\\">\\n    <program_name>NEW DECODER</program_name>\\n  </decoder>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "bbfae9d0-1afe-4ea0-b0e8-3647bbadbc52",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload decoder (without overwrite parameter)",
                "fullTitle": "Manager POST/manager/files Upload decoder (without overwrite parameter)",
                "timedOut": false,
                "duration": 265,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_decoders)\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!-- NEW Local Decoders -->\\n  <!-- Modify it at your will. -->\\n  <decoder name=\\\"local_decoder_example\\\">\\n    <program_name>NEW DECODER</program_name>\\n  </decoder>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1905);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "da1f4a84-e05b-437c-b754-9453654f7728",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload list (overwrite=true)",
                "fullTitle": "Manager POST/manager/files Upload list (overwrite=true)",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_lists + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/octet-stream\")\n.send(\"test-wazuh-w:write\\ntest-wazuh-r:read\\ntest-wazuh-a:attribute\\ntest-wazuh-x:execute\\ntest-wazuh-c:command\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "dc8aa414-38dd-470e-9a03-d7c447545233",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload list (without overwrite parameter)",
                "fullTitle": "Manager POST/manager/files Upload list (without overwrite parameter)",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_lists)\n.set(\"Content-Type\", \"application/octet-stream\")\n.send(\"test-wazuh-w:write\\ntest-wazuh-r:read\\ntest-wazuh-a:attribute\\ntest-wazuh-x:execute\\ntest-wazuh-c:command\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1905);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "1e22ad5c-b598-4459-a2ee-88143354e317",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload malformed rule",
                "fullTitle": "Manager POST/manager/files Upload malformed rule",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_rules + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!--   NEW RULE    -->\\n    <rule id=\\\"100001111\\\" level=\\\"5\\\">\\n      <if_sid>5716</if_sid>\\n      <srcip>1.1.1.1</srcip>\\n      <description>sshd: authentication failed from IP 1.1.1.1.</description>\\n      <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\\n    </rule>\\n  </group>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(703);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "a5dd854d-ea99-4ceb-b3e8-60e43b100e8d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload malformed decoder",
                "fullTitle": "Manager POST/manager/files Upload malformed decoder",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_decoders + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!-- NEW Local Decoders -->\\n  <!-- Modify it at your will. -->\\n  <decoder name=\\\"local_decoder_example\\\">\\n    <program_name>NEW <DECODER</program_name>\\n  </decoder>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(703);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "2cbcccf7-7114-4ccd-aca8-d9df96236127",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload malformed list",
                "fullTitle": "Manager POST/manager/files Upload malformed list",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_lists + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/octet-stream\")\n.send(\":write\\ntest-wazuh-r:read\\ntest-wazuh-a:attribute\\ntest-wazuh-x:execute\\ntest-wazuh-c:command\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(705);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "07312a7e-bcc6-452b-a9f9-02fe4df3979b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload list with empty path",
                "fullTitle": "Manager POST/manager/files Upload list with empty path",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files\")\n.set(\"Content-Type\", \"application/octet-stream\")\n.send(\"test&%-wazuh-w:write\\ntest-wazuh-r:read\\ntest-wazuh-a:attribute\\ntest-wazuh-x:execute\\ntest-wazuh-c:command\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(706);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "734c7d3e-c81d-4bc4-8c76-bb86ff077fa8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Upload a file with a wrong content type",
                "fullTitle": "Manager POST/manager/files Upload a file with a wrong content type",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_lists)\n.set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n.send(\"test-wazuh-w:write\\ntest-wazuh-r:read\\ntest-wazuh-a:attribute\\ntest-wazuh-x:execute\\ntest-wazuh-c:command\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(804);\n    res.body.message.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "f81456a7-4501-4280-9b02-b280ad01f2f3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "41942cea-d0c7-4fd4-a124-e2578ba147a7",
              "a927687d-2846-4b65-84d9-4525dae56b2b",
              "f23cd5b3-3f09-48d2-9c34-784ede4b17b5",
              "ac2e7a7b-4a94-4fa4-92a8-f23064076b89",
              "341dc515-4db2-47e5-a453-ca6e8e5e01b0",
              "bbfae9d0-1afe-4ea0-b0e8-3647bbadbc52",
              "da1f4a84-e05b-437c-b754-9453654f7728",
              "dc8aa414-38dd-470e-9a03-d7c447545233",
              "1e22ad5c-b598-4459-a2ee-88143354e317",
              "a5dd854d-ea99-4ceb-b3e8-60e43b100e8d",
              "2cbcccf7-7114-4ccd-aca8-d9df96236127",
              "07312a7e-bcc6-452b-a9f9-02fe4df3979b",
              "734c7d3e-c81d-4bc4-8c76-bb86ff077fa8",
              "f81456a7-4501-4280-9b02-b280ad01f2f3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2870,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "50f7bed7-ca54-4e2c-8683-46112f81b773",
            "title": "GET/manager/files",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request ossec.conf",
                "fullTitle": "Manager GET/manager/files Request ossec.conf",
                "timedOut": false,
                "duration": 265,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/manager/files?path=\" + path_ossec_conf)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.be.an.string;\n        res.body.data.should.equal(ossec_conf_content)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4176fb9d-c58c-42a0-a01c-77db3e07cc23",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request rules (local)",
                "fullTitle": "Manager GET/manager/files Request rules (local)",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=\" + path_rules)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "ae5723d4-f42a-481a-8b96-eba1da836f7c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request rules (global)",
                "fullTitle": "Manager GET/manager/files Request rules (global)",
                "timedOut": false,
                "duration": 266,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=ruleset/rules/0350-amazon_rules.xml\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "edca5042-7c07-4638-87c2-593b7d874fcb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request decoders (local)",
                "fullTitle": "Manager GET/manager/files Request decoders (local)",
                "timedOut": false,
                "duration": 265,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=\" + path_decoders)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c5b34469-a0dd-4fb9-b747-d01d501a08d8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request decoders (global)",
                "fullTitle": "Manager GET/manager/files Request decoders (global)",
                "timedOut": false,
                "duration": 264,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=ruleset/decoders/0005-wazuh_decoders.xml\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1b904a7b-6889-4932-8d4c-67f8613a33da",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request lists",
                "fullTitle": "Manager GET/manager/files Request lists",
                "timedOut": false,
                "duration": 266,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=\" + path_lists)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "45fe28d9-ed11-4c7d-92c9-c80231426410",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request wrong path 1",
                "fullTitle": "Manager GET/manager/files Request wrong path 1",
                "timedOut": false,
                "duration": 81,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=etc/internal_options.conf\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(704);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1cf74c3d-377d-4bf7-b071-05f36d942c35",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request wrong path 2",
                "fullTitle": "Manager GET/manager/files Request wrong path 2",
                "timedOut": false,
                "duration": 82,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=../tmp\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(704);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c7aa3602-b676-4006-b9f9-b5e743227beb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request wrong path 3",
                "fullTitle": "Manager GET/manager/files Request wrong path 3",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=./framework/wazuh/agent.py\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(704);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "15b8d033-d46f-4c90-8ec8-1169c7b29584",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request unexisting file",
                "fullTitle": "Manager GET/manager/files Request unexisting file",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=etc/rules/wrong_file.xml\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(1005);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "35a621c4-b74c-4fa1-8dd2-4c8105e37ace",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request file with empty path",
                "fullTitle": "Manager GET/manager/files Request file with empty path",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(706);\n    res.body.message.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "9eaa233d-09f7-49ea-b27f-5bed2c4d4387",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request file with validation parameter (true)",
                "fullTitle": "Manager GET/manager/files Request file with validation parameter (true)",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/files?path=\" + path_lists + \"&validation=true\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "605d6152-172a-4cf9-a264-45983db9c341",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4176fb9d-c58c-42a0-a01c-77db3e07cc23",
              "ae5723d4-f42a-481a-8b96-eba1da836f7c",
              "edca5042-7c07-4638-87c2-593b7d874fcb",
              "c5b34469-a0dd-4fb9-b747-d01d501a08d8",
              "1b904a7b-6889-4932-8d4c-67f8613a33da",
              "45fe28d9-ed11-4c7d-92c9-c80231426410",
              "1cf74c3d-377d-4bf7-b071-05f36d942c35",
              "c7aa3602-b676-4006-b9f9-b5e743227beb",
              "15b8d033-d46f-4c90-8ec8-1169c7b29584",
              "35a621c4-b74c-4fa1-8dd2-4c8105e37ace",
              "9eaa233d-09f7-49ea-b27f-5bed2c4d4387",
              "605d6152-172a-4cf9-a264-45983db9c341"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2461,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "83973098-8331-4f11-a9f4-03fa5287e8c4",
            "title": "DELETE/manager/files",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Delete rules",
                "fullTitle": "Manager DELETE/manager/files Delete rules",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.delete(\"/manager/files?path=\" + path_rules)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "257629da-fb4c-4866-bb9d-e76a476b8eef",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Delete decoders",
                "fullTitle": "Manager DELETE/manager/files Delete decoders",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.delete(\"/manager/files?path=\" + path_decoders)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "950b2593-4217-4f1c-8727-72480ece64b3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Delete CDB list",
                "fullTitle": "Manager DELETE/manager/files Delete CDB list",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.delete(\"/manager/files?path=\" + path_lists)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "716956d8-01c5-4b4c-a014-b5260c2363e5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Delete file with empty path",
                "fullTitle": "Manager DELETE/manager/files Delete file with empty path",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.delete(\"/manager/files\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(400)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'message']);\n    res.body.error.should.equal(706);\n    res.body.message.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "e25dd212-997c-43a4-89ac-a297eeece577",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "257629da-fb4c-4866-bb9d-e76a476b8eef",
              "950b2593-4217-4f1c-8727-72480ece64b3",
              "716956d8-01c5-4b4c-a014-b5260c2363e5",
              "e25dd212-997c-43a4-89ac-a297eeece577"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 872,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "cd583b42-5ac2-4a2f-85a1-443faefa34e3",
            "title": "GET/manager/configuration/validation (OK)",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request validation ",
                "fullTitle": "Manager GET/manager/configuration/validation (OK) Request validation ",
                "timedOut": false,
                "duration": 766,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/manager/configuration/validation\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.status.should.equal('OK');\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f76799b5-9a64-4334-a4fe-91c6af7b68ec",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f76799b5-9a64-4334-a4fe-91c6af7b68ec"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 766,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "c3514869-abac-4144-b8c0-4a7290fdf279",
            "title": "GET/manager/configuration/validation (KO)",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Manager GET/manager/configuration/validation (KO) \"before all\" hook",
                "timedOut": false,
                "duration": 1266,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_ossec_conf + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/xml\")\n.send(\"<!--  Wazuh - Manager -->\\n  <ossec_config>\\n    <global>\\n      <jsonout_output>WRONG_VALUE</jsonout_output>\\n      <alerts_log>yes</alerts_log>\\n      <logall>no</logall>\\n      <logall_json>no</logall_json>\\n      <email_notification>no</email_notification>\\n      <smtp_server>smtp.example.wazuh.com</smtp_server>\\n      <email_from>ossecm@example.wazuh.com</email_from>\\n      <email_to>recipient@example.wazuh.com</email_to>\\n      <email_maxperhour>12</email_maxperhour>\\n      <email_log_source>alerts.log</email_log_source>\\n      <queue_size>131072</queue_size>\\n    </global>\\n <cluster>\\n      <name>wazuh</name>\\n      <node_name>master</node_name>\\n      <node_type>master</node_type>\\n      <key>XXXX</key>\\n      <port>1516</port>\\n      <bind_addr>192.168.122.111</bind_addr>\\n      <nodes>\\n        <node>192.168.122.111</node>\\n      </nodes>\\n      <hidden>no</hidden>\\n      <disabled>no</disabled>\\n    </cluster>\\n  </ossec_config>\\n\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    setTimeout(function(){\n        done();\n    }, 1000)\n});",
                "err": {},
                "isRoot": false,
                "uuid": "cf95e1e3-aeab-450e-badd-1da2d80a1cae",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook",
                "fullTitle": "Manager GET/manager/configuration/validation (KO) \"after all\" hook",
                "timedOut": false,
                "duration": 273,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.post(\"/manager/files?path=\" + path_ossec_conf + \"&overwrite=true\")\n.set(\"Content-Type\", \"application/xml\")\n.send(ossec_conf_content)\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err, res) {\n    if (err) throw err;\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "6e93fe69-ad7f-4901-b796-abd5b1d4a99d",
                "isHook": true,
                "skipped": false
              }
            ],
            "tests": [
              {
                "title": "Request validation",
                "fullTitle": "Manager GET/manager/configuration/validation (KO) Request validation",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/manager/configuration/validation\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['status', 'details']);\n        res.body.data.status.should.equal('KO');\n        res.body.data.details.should.be.instanceof(Array);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a44c3a39-46b0-4a9d-9968-026998d270a2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a44c3a39-46b0-4a9d-9968-026998d270a2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 270,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "905ff57f-4409-4c33-b929-4cc7aae809f4",
            "title": "GET/manager/config/:component/:configuration",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request-Agentless-Agentless",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Agentless-Agentless",
                "timedOut": false,
                "duration": 266,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/agentless/agentless\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('agentless'); // returns an array\n    res.body.data.agentless[0].should.have.properties(['state', 'host',\n    'frequency', 'arguments', 'type', 'port']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4023e2aa-0138-4a91-b24c-fc6353e9d0fb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Analysis-Global",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Analysis-Global",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/analysis/global\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['global']);\n    res.body.data.global.should.have.properties(['email_notification', 'max_output_size',\n    'alerts_log', 'zeromq_output', 'host_information', 'jsonout_output', 'rotate_interval',\n    'rootkit_detection', 'integrity_checking', 'memory_size', 'logall', 'prelude_output',\n    'stats', 'white_list', 'logall_json']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1a4f7bd9-9b5a-4b7e-b3d6-cb15430e2321",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Analysis-Active-response",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Analysis-Active-response",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/analysis/active_response\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    // res.body.data.should.have.properties(['active_response']); // empty list\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3bc66c0a-8e3a-40ba-a715-98ddb14f90bb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Analysis-Alerts",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Analysis-Alerts",
                "timedOut": false,
                "duration": 274,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/analysis/alerts\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['alerts']);\n    res.body.data.alerts.should.have.properties(['email_alert_level', 'log_alert_level']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "77471e47-9c75-4544-b746-2a470ee0f322",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Analysis-Command",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Analysis-Command",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/analysis/command\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('command');\n    res.body.data.command[0].should.have.properties(['executable', 'timeout_allowed',\n    'name', 'expect']);\n    res.body.data.command[1].should.have.properties(['executable', 'timeout_allowed',\n    'name']);\n    res.body.data.command[2].should.have.properties(['executable', 'timeout_allowed',\n    'name', 'expect']);\n    res.body.data.command[3].should.have.properties(['executable', 'timeout_allowed',\n    'name', 'expect']);\n    res.body.data.command[4].should.have.properties(['executable', 'timeout_allowed',\n    'name', 'expect']);\n    res.body.data.command[5].should.have.properties(['executable', 'timeout_allowed',\n    'name', 'expect']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b2d7303d-bf4a-4573-8091-e5a224b70402",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Analysis-Internal",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Analysis-Internal",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/analysis/internal\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('internal');\n    res.body.data.internal.should.have.properties(['analysisd']);\n    res.body.data.internal.analysisd.should.have.properties(['label_cache_maxage',\n    'stats_percent_diff', 'show_hidden_labels', 'decoder_order_size',\n    'min_rotate_interval', 'stats_mindiff', 'log_fw', 'rlimit_nofile', 'fts_list_size',\n    'debug', 'fts_min_size_for_str', 'default_timeframe', 'stats_maxdiff']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2ab90599-8180-4738-bbf6-75d5cd62654a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Auth-Auth",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Auth-Auth",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/auth/auth\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('auth');\n    res.body.data.auth.should.have.properties(['purge', 'ssl_auto_negotiate', 'ciphers',\n    'force_insert', 'ssl_verify_host', 'limit_maxagents', 'force_time',\n    'ssl_manager_key', 'disabled', 'ssl_manager_cert', 'use_source_ip',\n    'use_password', 'port']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "0bc1fb5b-99d3-4c5e-9755-b1a6902b0699",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Com-Active-response",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Com-Active-response",
                "timedOut": false,
                "duration": 319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/com/active-response\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['active-response']);\n    res.body.data['active-response'].should.have.properties(['disabled', 'ca_verification']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "26cacd34-3fe9-4989-be58-0b66330984d6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Com-Internal",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Com-Internal",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/com/internal\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['internal']);\n    res.body.data.internal.should.have.properties(['execd']);\n    res.body.data.internal.execd.should.have.properties(['request_timeout', 'max_restart_lock']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c8dceaf0-6592-40a8-866b-4ce912372f69",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Csyslog-Csyslog",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Csyslog-Csyslog",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/csyslog/csyslog\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['syslog_output']);\n    res.body.data['syslog_output'][0].should.have.properties(['format',\n    'level', 'use_fqdn', 'port', 'server']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "73313bda-10be-4c94-8205-b81545ad19fd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Integrator-Integration",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Integrator-Integration",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/integrator/integration\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('integration');\n    res.body.data.integration[0].should.have.properties(['alert_format', 'hook_url',\n    'group', 'name', 'level']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "ddceb61d-0019-464a-8738-90e7c42ac67f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Logcollector-Localfile",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Logcollector-Localfile",
                "timedOut": false,
                "duration": 264,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/logcollector/localfile\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('localfile');\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a493a8ec-8a62-46a7-80d3-3d48bdf0e66f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Logcollector-Socket",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Logcollector-Socket",
                "timedOut": false,
                "duration": 264,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/logcollector/socket\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    // res.body.should.have.properties(['error', 'data']); // data property is empty\n    // res.body.data.should.have.properties(['socket']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "491350a4-4fed-4557-9c40-96081b59a04a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Logcollector-Internal",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Logcollector-Internal",
                "timedOut": false,
                "duration": 266,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/logcollector/internal\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('internal');\n    res.body.data.internal.should.have.properties('logcollector');\n\t\t\t\tres.body.data.internal.logcollector.should.have.properties(['open_attempts', 'input_threads',\n    'vcheck_files', 'max_files', 'sock_fail_time', 'queue_size', 'max_lines', 'remote_commands',\n    'loop_timeout', 'debug', 'open_attempts']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "904729a8-a56f-4fdb-a70b-b1e332625319",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Mail-Global",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Mail-Global",
                "timedOut": false,
                "duration": 262,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/mail/global\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('global');\n    res.body.data.global.should.have.properties(['email_maxperhour', 'email_to',\n    'email_from', 'smtp_server']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "78ea6163-f6be-4b28-be38-85538b7556ad",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Mail-Alerts",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Mail-Alerts",
                "timedOut": false,
                "duration": 265,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/mail/alerts\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    // res.body.should.have.properties(['error', 'data']); // data property is empty\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "af40f631-fb18-4224-a08f-1fbc9db9cdcf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Mail-Internal",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Mail-Internal",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/mail/internal\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('internal');\n    res.body.data.internal.should.have.properties('mail');\n    res.body.data.internal.mail.should.have.properties(['strict_checking',\n    'grouping']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "109389d9-51a1-4aa7-93dd-244ef25bc2e2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Monitor-Internal",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Monitor-Internal",
                "timedOut": false,
                "duration": 261,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/monitor/internal\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('monitord');\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4678f843-35fb-44bc-aad3-925dc2789625",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Request-Remote",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Request-Remote",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/request/remote\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('remote');\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5f0f9b49-164f-4b62-b6bd-240a641f387c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Request-Internal",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Request-Internal",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/request/internal\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties('internal');\n    res.body.data.internal.should.have.properties('remoted');\n    res.body.data.internal.remoted.should.have.properties(['request_timeout', 'pass_empty_keyfile',\n    'recv_timeout', 'request_rto_sec', 'request_rto_msec', 'response_timeout', 'sender_pool', 'recv_counter_flush',\n    'request_pool', 'comp_average_printout', 'shared_reload', 'merge_shared', 'rlimit_nofile',\n    'verify_msg_id', 'max_attempts']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "08e86f67-5b1f-48b9-82b3-8969cd2a2df8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Syscheck-Syscheck",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Syscheck-Syscheck",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/syscheck/syscheck\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['syscheck']);\n    res.body.data.syscheck.should.have.properties(['ignore', 'skip_nfs', 'directories',\n    'scan_on_start', 'disabled', 'frequency', 'whodata', 'nodiff']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1ce4c175-bc0a-4df1-853f-596aaa0a6632",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Syscheck-Rootcheck",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Syscheck-Rootcheck",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/syscheck/rootcheck\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['rootcheck']);\n    res.body.data.rootcheck.should.have.properties(['check_unixaudit', 'check_sys', 'rootkit_trojans',\n    'skip_nfs', 'check_if', 'check_pids', 'check_dev', 'check_ports', 'disabled', 'rootkit_files',\n    // 'frequency', 'scanall', 'check_trojans', 'base_directory', 'check_files', 'system_audit']); // base directory value is empty, this cause an error, system_audit is optional\n    'frequency', 'scanall', 'check_trojans', 'check_files']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "393a5643-d22d-424b-a838-91d295f157f9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Syscheck-Internal",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Syscheck-Internal",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/syscheck/internal\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['internal']);\n    res.body.data.internal.should.have.properties(['syscheck', 'rootcheck']);\n    res.body.error.should.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "30987256-0e6b-4935-8184-2edb6bfbc807",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Request-Wmodules-Wmodules",
                "fullTitle": "Manager GET/manager/config/:component/:configuration Request-Wmodules-Wmodules",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/manager/config/wmodules/wmodules\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.data.should.have.properties(['wmodules']);\n    res.body.error.should.equal(0);\n    // get the name of the modules\n    var modules = []\n    for (i in res.body.data.wmodules) {\n        modules.push(Object.keys(res.body.data.wmodules[i])[0])\n    }\n    // list of modules which should be present in the request\n    module_list = ['cis-cat', 'database', 'open-scap', 'osquery', 'sca', 'syscollector', 'vulnerability-detector', 'wazuh_control', 'wazuh_download']\n    // check modules\n    should((JSON.stringify(module_list.sort()))).be.eql(JSON.stringify(modules.sort()))\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5e01cc23-83bb-4f53-a356-e8abbef6c117",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4023e2aa-0138-4a91-b24c-fc6353e9d0fb",
              "1a4f7bd9-9b5a-4b7e-b3d6-cb15430e2321",
              "3bc66c0a-8e3a-40ba-a715-98ddb14f90bb",
              "77471e47-9c75-4544-b746-2a470ee0f322",
              "b2d7303d-bf4a-4573-8091-e5a224b70402",
              "2ab90599-8180-4738-bbf6-75d5cd62654a",
              "0bc1fb5b-99d3-4c5e-9755-b1a6902b0699",
              "26cacd34-3fe9-4989-be58-0b66330984d6",
              "c8dceaf0-6592-40a8-866b-4ce912372f69",
              "73313bda-10be-4c94-8205-b81545ad19fd",
              "ddceb61d-0019-464a-8738-90e7c42ac67f",
              "a493a8ec-8a62-46a7-80d3-3d48bdf0e66f",
              "491350a4-4fed-4557-9c40-96081b59a04a",
              "904729a8-a56f-4fdb-a70b-b1e332625319",
              "78ea6163-f6be-4b28-be38-85538b7556ad",
              "af40f631-fb18-4224-a08f-1fbc9db9cdcf",
              "109389d9-51a1-4aa7-93dd-244ef25bc2e2",
              "4678f843-35fb-44bc-aad3-925dc2789625",
              "5f0f9b49-164f-4b62-b6bd-240a641f387c",
              "08e86f67-5b1f-48b9-82b3-8969cd2a2df8",
              "1ce4c175-bc0a-4df1-853f-596aaa0a6632",
              "393a5643-d22d-424b-a838-91d295f157f9",
              "30987256-0e6b-4935-8184-2edb6bfbc807",
              "5e01cc23-83bb-4f53-a356-e8abbef6c117"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6476,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "c15312ea-044e-4c1b-9dde-6d07fdd5b8e9",
            "title": "PUT/manager/restart",
            "fullFile": "/wazuh-api/test/test_manager.js",
            "file": "/test/test_manager.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Manager PUT/manager/restart Request",
                "timedOut": false,
                "duration": 266,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.put(\"/manager/restart\")\n.auth(common.credentials.user, common.credentials.password)\n.expect(\"Content-type\",/json/)\n.expect(200)\n.end(function(err,res){\n    if (err) return done(err);\n    res.body.should.have.properties(['error', 'data']);\n    res.body.error.should.equal(0);\n    res.body.data.should.be.an.string;\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7235cd7d-97e6-4fbd-a993-ed00c3bc5335",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7235cd7d-97e6-4fbd-a993-ed00c3bc5335"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 266,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2020
}