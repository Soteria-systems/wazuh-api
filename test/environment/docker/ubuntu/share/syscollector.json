{
  "stats": {
    "suites": 18,
    "tests": 239,
    "passes": 239,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-08T12:20:03.421Z",
    "end": "2020-06-08T12:21:19.563Z",
    "duration": 76142,
    "testsRegistered": 239,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "0229853f-ac5c-4e8e-90ed-2e7c25567acd",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "1adf9ffe-184a-4a2f-8876-64c323c19921",
        "title": "Syscollector",
        "fullFile": "/wazuh-api/test/test_syscollector.js",
        "file": "/test/test_syscollector.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "ccf01d42-aee0-48f0-8563-445ed6daa799",
            "title": "GET/syscollector/:agent_id/os",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/os \"before all\" hook",
                "timedOut": false,
                "duration": 393,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/agents/\" + agent_id)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['os', 'manager']);\n        res.body.data.os.should.have.properties(['arch', 'platform']);\n        expected_hostname = res.body.data.manager;\n        expected_architecture = res.body.data.os.arch;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6b023bd4-c21a-4d17-a0e1-84ac96176885",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/os Request",
                "timedOut": false,
                "duration": 337,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/os\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.be.an.array;\n        res.body.data.should.have.properties(os_fields);\n        res.body.data.os.should.have.properties(['name', 'version']);\n        res.body.data.scan.should.have.properties(['id', 'time']);\n        res.body.data.hostname.should.be.equal(expected_hostname);\n        res.body.data.architecture.should.be.equal(expected_architecture);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6202d5ad-3440-47c3-8f85-56d3b2474dcd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/os Selector",
                "timedOut": false,
                "duration": 313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/os?select=os_version,sysname,release\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['os', 'sysname', 'release']);\n        res.body.data.os.should.have.properties(['version']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "11471c95-802e-44ab-af27-cd9a07b9bf87",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/os Not allowed selector",
                "timedOut": false,
                "duration": 321,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/os?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2a2ad1e6-f110-4630-83c8-2cd5c3d97029",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6202d5ad-3440-47c3-8f85-56d3b2474dcd",
              "11471c95-802e-44ab-af27-cd9a07b9bf87",
              "2a2ad1e6-f110-4630-83c8-2cd5c3d97029"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 971,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "4e9f2cec-b44a-4137-8afe-a176e2788849",
            "title": "GET/syscollector/:agent_id/hardware",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hardware Request",
                "timedOut": false,
                "duration": 292,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/hardware\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.be.an.array;\n        res.body.data.should.have.properties(hardware_fields);\n        res.body.data.ram.should.have.properties(['free', 'total']);\n        res.body.data.scan.should.have.properties(['id', 'time']);\n        res.body.data.cpu.should.have.properties(['name', 'cores', 'mhz']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2fb1e08b-d574-429d-bffd-1870b8e5aabb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hardware Selector",
                "timedOut": false,
                "duration": 288,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/hardware?select=ram_free,board_serial,cpu_name,ram_total\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['board_serial', 'ram', 'cpu']);\n        res.body.data.ram.should.have.properties(['free', 'total']);\n        res.body.data.cpu.should.have.properties(['name']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d7aac850-e498-4925-9333-b646305e9ecb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hardware Not allowed selector",
                "timedOut": false,
                "duration": 288,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/hardware?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "58c4ecfa-2615-4fb0-a9ab-b96c206a1610",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2fb1e08b-d574-429d-bffd-1870b8e5aabb",
              "d7aac850-e498-4925-9333-b646305e9ecb",
              "58c4ecfa-2615-4fb0-a9ab-b96c206a1610"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 868,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "ecd7b776-f50e-4f7e-9779-a508bf3ed812",
            "title": "GET/syscollector/:agent_id/packages",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages \"before all\" hook",
                "timedOut": false,
                "duration": 278,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['name']);\n        expected_name = res.body.data.items[0].name;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d37521c3-8440-4ed2-9623-84032a487952",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages \"before all\" hook",
                "timedOut": false,
                "duration": 276,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['vendor']);\n        expected_vendor = res.body.data.items[0].vendor;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "77a712a4-2d14-4f35-9174-a65c68eef973",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages \"before all\" hook",
                "timedOut": false,
                "duration": 317,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['name']);\n        expected_filter_name = res.body.data.items[0].name;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9870c81b-ce60-470f-a669-3fa885b647a9",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages \"before all\" hook",
                "timedOut": false,
                "duration": 330,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['architecture']);\n        expected_architecture = res.body.data.items[0].architecture;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "5df413f1-ff06-43d6-92fb-103e64547bf0",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages \"before all\" hook",
                "timedOut": false,
                "duration": 361,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['format']);\n        expected_format = res.body.data.items[0].format;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "5484dacf-2075-49c7-bd25-f9231c38bd1f",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Request",
                "timedOut": false,
                "duration": 400,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(packages_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "17d3086e-f0a4-4555-9557-e490dc256417",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Selector",
                "timedOut": false,
                "duration": 295,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?select=scan_id,description,architecture\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['description', 'architecture', 'scan']);\n        res.body.data.items[0].scan.should.have.properties(['id']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2daf32b6-13af-4ca9-8238-b0ffb5a64cfd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Not allowed selector",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e2152e5d-eb9c-4674-a02d-3496190a1104",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Pagination",
                "timedOut": false,
                "duration": 272,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(packages_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4dc05355-b2c2-4940-970a-17e169546958",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Wrong limit",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2e7dd6b8-4ee2-45f7-bbd1-431a0f04564a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort -",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Sort -",
                "timedOut": false,
                "duration": 277,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?sort=-name&limit=2\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(2);\n        res.body.data.items[0].should.have.properties(['name']);\n        res.body.data.items[1].should.have.properties(['name']);\n        //res.body.data.items[0].name.should.not.be.greaterThan(res.body.data.items[1].name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "b550ac2d-2c93-4826-b6b5-9670839220dd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort +",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Sort +",
                "timedOut": false,
                "duration": 274,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?sort=+name&limit=2\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(2);\n        res.body.data.items[0].should.have.properties(['name']);\n        res.body.data.items[1].should.have.properties(['name']);\n        //res.body.data.items[1].name.should.not.be.greaterThan(res.body.data.items[0].name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "da55de65-9385-4e6d-a60e-e0a9cac055ee",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Wrong Sort",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "206dbec2-a6d4-415a-b14e-d1189f8d6b81",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Search",
                "timedOut": false,
                "duration": 295,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?search=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(packages_fields);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "38236b41-8f9e-41f5-9682-74a9f5c38229",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: vendor",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Filter: vendor",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?vendor=\" + encodeURI(expected_vendor))\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['vendor']);\n        res.body.data.items[0].vendor.should.be.equal(expected_vendor);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1acc52b7-b0f3-4aa8-aca0-9f079a06b701",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: name",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Filter: name",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?name=\" + expected_filter_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['name']);\n        res.body.data.items[0].name.should.be.equal(expected_filter_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9d464cb1-fdc1-4c64-b57d-abe5657fdea2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: architecture",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Filter: architecture",
                "timedOut": false,
                "duration": 307,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?architecture=\" + expected_architecture)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['architecture']);\n        res.body.data.items[0].architecture.should.be.equal(expected_architecture);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8f315957-47b2-4c16-b895-ae772cd31e79",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: format",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Filter: format",
                "timedOut": false,
                "duration": 304,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?format=\" + expected_format)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['format']);\n        res.body.data.items[0].format.should.be.equal(expected_format);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "30609413-c9fb-4e89-b72f-f8bc68dfa903",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Wrong filter",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/packages?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3adbf4b8-2f19-4813-b56b-03b703923272",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/packages Query",
                "timedOut": false,
                "duration": 317,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get('/syscollector/' + agent_id + '/packages?q=format=' + expected_format + ',architecture!=' + expected_architecture)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['format']);\n        res.body.data.items[0].format.should.be.equal(expected_format);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0d6b02e5-a642-475f-bd64-e1dddadcec4f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "17d3086e-f0a4-4555-9557-e490dc256417",
              "2daf32b6-13af-4ca9-8238-b0ffb5a64cfd",
              "e2152e5d-eb9c-4674-a02d-3496190a1104",
              "4dc05355-b2c2-4940-970a-17e169546958",
              "2e7dd6b8-4ee2-45f7-bbd1-431a0f04564a",
              "b550ac2d-2c93-4826-b6b5-9670839220dd",
              "da55de65-9385-4e6d-a60e-e0a9cac055ee",
              "206dbec2-a6d4-415a-b14e-d1189f8d6b81",
              "38236b41-8f9e-41f5-9682-74a9f5c38229",
              "1acc52b7-b0f3-4aa8-aca0-9f079a06b701",
              "9d464cb1-fdc1-4c64-b57d-abe5657fdea2",
              "8f315957-47b2-4c16-b895-ae772cd31e79",
              "30609413-c9fb-4e89-b72f-f8bc68dfa903",
              "3adbf4b8-2f19-4813-b56b-03b703923272",
              "0d6b02e5-a642-475f-bd64-e1dddadcec4f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4001,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "b09805ba-a8c0-4d7c-bdc0-8869f4c08e94",
            "title": "GET/experimental/syscollector/packages",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages \"before all\" hook",
                "timedOut": false,
                "duration": 394,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['name']);\n        expected_name = res.body.data.items[0].name;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "dbb2bbc7-8a69-4ab5-9c3a-2a6d5e836fb0",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages \"before all\" hook",
                "timedOut": false,
                "duration": 322,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['vendor']);\n        expected_vendor = res.body.data.items[0].vendor;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6590bf6b-5d21-4dc2-a5a7-5c8b6effee63",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages \"before all\" hook",
                "timedOut": false,
                "duration": 300,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['name']);\n        expected_filter_name = res.body.data.items[0].name;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "981fc75f-cf37-4c33-8f0e-7e110a9aec3c",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages \"before all\" hook",
                "timedOut": false,
                "duration": 308,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['architecture']);\n        expected_architecture = res.body.data.items[0].architecture;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6d3b8f4c-9891-4845-80cc-8536a1ac91b0",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages \"before all\" hook",
                "timedOut": false,
                "duration": 309,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['format']);\n        expected_format = res.body.data.items[0].format;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "dd4e7ae3-c75f-4666-aeb1-8707a7d9b66b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Request",
                "timedOut": false,
                "duration": 560,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(packages_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2cc4fbc6-1f04-4d41-9c67-b2a6ca0a5ea1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Selector",
                "timedOut": false,
                "duration": 590,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?select=scan_id,description,scan_time,architecture\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['scan', 'description', 'architecture']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "18d1539f-d78a-40d1-bbeb-5e7e463713a0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Not allowed selector",
                "timedOut": false,
                "duration": 302,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7b187b28-7137-4263-b12b-75ee78d26919",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Pagination",
                "timedOut": false,
                "duration": 337,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(packages_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "297185bb-366c-41bf-a039-6788f3420d88",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Wrong limit",
                "timedOut": false,
                "duration": 85,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "89e0fe0d-5a8d-4332-8305-68a04ee533aa",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort -",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Sort -",
                "timedOut": false,
                "duration": 308,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?sort=-name&limit=2\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(2);\n        res.body.data.items[0].should.have.properties(['name']);\n        res.body.data.items[1].should.have.properties(['name']);\n        //res.body.data.items[0].name.should.not.be.greaterThan(res.body.data.items[1].name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "87afaccc-3e75-404d-9c5b-65f3cd3a7973",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort +",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Sort +",
                "timedOut": false,
                "duration": 317,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?sort=+name&limit=2\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(2);\n        res.body.data.items[0].should.have.properties(['name']);\n        res.body.data.items[1].should.have.properties(['name']);\n        //res.body.data.items[1].name.should.not.be.greaterThan(res.body.data.items[0].name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "266fa7ab-f01c-4589-ac8f-828eed2ac9a3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Wrong Sort",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "189e015c-4bb7-48da-ae10-ed928d8c4837",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Search",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?search=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(packages_fields);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "12ae1737-7ecc-486d-9f85-45c0267558ff",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: vendor",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Filter: vendor",
                "timedOut": false,
                "duration": 328,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?vendor=\" + encodeURI(expected_vendor))\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['vendor']);\n        res.body.data.items[0].vendor.should.be.equal(expected_vendor);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4e16d603-b984-4fa3-a65a-adceacc9a0ad",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: name",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Filter: name",
                "timedOut": false,
                "duration": 346,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?name=\" + expected_filter_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['name']);\n        res.body.data.items[0].name.should.be.equal(expected_filter_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "530058b6-39b8-4620-98de-5b4ace7965c3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: architecture",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Filter: architecture",
                "timedOut": false,
                "duration": 487,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?architecture=\" + expected_architecture)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['architecture']);\n        res.body.data.items[0].architecture.should.be.equal(expected_architecture);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0d12dc22-168d-4938-b1dd-385e36866919",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: format",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Filter: format",
                "timedOut": false,
                "duration": 517,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?format=\" + expected_format)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['format']);\n        res.body.data.items[0].format.should.be.equal(expected_format);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7b0344fb-d80f-4ab7-a82b-2fc7bb56a355",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Wrong filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/packages?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7d7bb947-51f4-4760-854b-6416f24c7b53",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/experimental/syscollector/packages Query",
                "timedOut": false,
                "duration": 527,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get('/experimental/syscollector/packages?q=format=' + expected_format + ',architecture!=' + expected_architecture + ',(size>1000;size<2000)')\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['format']);\n        res.body.data.items[0].format.should.be.equal(expected_format);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "bd7ca3a6-7ee4-4a03-95db-67a0bd81b7cc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2cc4fbc6-1f04-4d41-9c67-b2a6ca0a5ea1",
              "18d1539f-d78a-40d1-bbeb-5e7e463713a0",
              "7b187b28-7137-4263-b12b-75ee78d26919",
              "297185bb-366c-41bf-a039-6788f3420d88",
              "89e0fe0d-5a8d-4332-8305-68a04ee533aa",
              "87afaccc-3e75-404d-9c5b-65f3cd3a7973",
              "266fa7ab-f01c-4589-ac8f-828eed2ac9a3",
              "189e015c-4bb7-48da-ae10-ed928d8c4837",
              "12ae1737-7ecc-486d-9f85-45c0267558ff",
              "4e16d603-b984-4fa3-a65a-adceacc9a0ad",
              "530058b6-39b8-4620-98de-5b4ace7965c3",
              "0d12dc22-168d-4938-b1dd-385e36866919",
              "7b0344fb-d80f-4ab7-a82b-2fc7bb56a355",
              "7d7bb947-51f4-4760-854b-6416f24c7b53",
              "bd7ca3a6-7ee4-4a03-95db-67a0bd81b7cc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5481,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "a8bec863-b93b-47fa-8b54-b451c995e98c",
            "title": "GET/experimental/syscollector/os",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/os \"before all\" hook",
                "timedOut": false,
                "duration": 303,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['sysname']);\n        expected_name = res.body.data.items[0].sysname;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4b1fc664-baec-4b85-bed3-32a58087cc82",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/os \"before all\" hook",
                "timedOut": false,
                "duration": 316,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['architecture']);\n        expected_architecture = res.body.data.items[0].architecture;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8b6d4544-2cef-4abc-8b99-baac9c1b27be",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/os \"before all\" hook",
                "timedOut": false,
                "duration": 280,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/os\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['os']);\n        res.body.data.os.should.have.properties(['name']);\n        expected_os_name = res.body.data.os.name;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a06ea66d-4888-44e2-aa91-b5f98df20723",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/os \"before all\" hook",
                "timedOut": false,
                "duration": 307,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['os']);\n        expected_os_version = res.body.data.items[0].os_version;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e25d2708-6a75-4672-bccd-f097f9ed4205",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/os \"before all\" hook",
                "timedOut": false,
                "duration": 304,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(['release']);\n        expected_release = res.body.data.items[0].release;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d1f64510-8703-4faa-95be-62da36710df3",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Request",
                "timedOut": false,
                "duration": 313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(os_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2160ca35-ffb6-43a7-9347-e2f70222a6ef",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Selector",
                "timedOut": false,
                "duration": 310,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?select=sysname,version,release,os_version\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['sysname', 'version', 'release', 'os']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "959d5766-2139-4317-8e8d-e207a4aaf529",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Not allowed selector",
                "timedOut": false,
                "duration": 290,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "63287206-b630-4cb8-a61a-55583cc62c66",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Pagination",
                "timedOut": false,
                "duration": 304,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(os_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a47e2a11-7899-4f2c-9bc3-0cb84bee2d17",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Wrong limit",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c4eb875f-b77b-4b67-abc7-421e5953318a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Search",
                "timedOut": false,
                "duration": 328,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?search=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(os_fields);\n        res.body.data.items[0].sysname.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6a7a6203-8b1e-4961-a745-e7a0abafb636",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Wrong filter",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "09907445-b112-4aab-84a8-8a5807258da0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: architecture",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Filter: architecture",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?architecture=\" + expected_architecture)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['architecture']);\n        res.body.data.items[0].architecture.should.be.equal(expected_architecture);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "86b1dcfc-4ab7-43e3-9cc9-2e84d0b56ad8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: os_name",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Filter: os_name",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?os_name=\" + expected_os_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['os']);\n        res.body.data.items[0].os.name.should.be.equal(expected_os_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4ab31efa-0683-4c36-8e83-9908dfd3952b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: release",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Filter: release",
                "timedOut": false,
                "duration": 424,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?release=\" + expected_release)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['release']);\n        res.body.data.items[0].release.should.be.equal(expected_release);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8a6a9a10-d2a1-4266-9b3a-f392526e974c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/experimental/syscollector/os Query",
                "timedOut": false,
                "duration": 323,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/os?q=release=\" + expected_release + ';os_major>16')\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['release']);\n        res.body.data.items[0].release.should.be.equal(expected_release);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1a6f86b2-06ab-41b3-9d51-4d6084ab8534",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2160ca35-ffb6-43a7-9347-e2f70222a6ef",
              "959d5766-2139-4317-8e8d-e207a4aaf529",
              "63287206-b630-4cb8-a61a-55583cc62c66",
              "a47e2a11-7899-4f2c-9bc3-0cb84bee2d17",
              "c4eb875f-b77b-4b67-abc7-421e5953318a",
              "6a7a6203-8b1e-4961-a745-e7a0abafb636",
              "09907445-b112-4aab-84a8-8a5807258da0",
              "86b1dcfc-4ab7-43e3-9cc9-2e84d0b56ad8",
              "4ab31efa-0683-4c36-8e83-9908dfd3952b",
              "8a6a9a10-d2a1-4266-9b3a-f392526e974c",
              "1a6f86b2-06ab-41b3-9d51-4d6084ab8534"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3077,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "ddd54eb4-f795-4817-a335-cea143293d6f",
            "title": "GET/experimental/syscollector/hardware",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware \"before all\" hook",
                "timedOut": false,
                "duration": 272,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/hardware\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['ram']);\n        res.body.data.ram.should.have.properties(['total']);\n        expected_ram_total = res.body.data.ram.total;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3f4735f6-743f-4440-9b64-aff8182b7783",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware \"before all\" hook",
                "timedOut": false,
                "duration": 272,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/hardware\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['cpu']);\n        res.body.data.cpu.should.have.properties(['cores']);\n        expected_cpu_cores = res.body.data.cpu.cores;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a99c318e-6003-43a0-95d5-29222dd1b744",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware \"before all\" hook",
                "timedOut": false,
                "duration": 272,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/hardware\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['cpu']);\n        res.body.data.cpu.should.have.properties(['mhz']);\n        expected_cpu_mhz = res.body.data.cpu.mhz;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "084091a6-60b7-49d7-a81e-134ee96b12a1",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware \"before all\" hook",
                "timedOut": false,
                "duration": 280,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/hardware\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.should.have.properties(['board_serial']);\n        expected_board_serial = res.body.data.board_serial;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "692678a3-09e8-46fe-a333-59f49c2c338b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Request",
                "timedOut": false,
                "duration": 309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hardware_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ba00336b-7146-4d87-92cb-d8c8d589653b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Selector",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?select=ram_free,board_serial,cpu_name,cpu_mhz\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['ram', 'board_serial', 'cpu', 'agent_id', 'cpu']);\n        res.body.data.items[0].cpu.should.have.properties(['mhz','name']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "439428b3-0587-437d-95b6-e6ca0f53d664",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Not allowed selector",
                "timedOut": false,
                "duration": 298,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "684de7dd-1458-48b5-b577-65e148000721",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Pagination",
                "timedOut": false,
                "duration": 304,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(hardware_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6b06af57-f933-4b0e-a48c-5975fdae9627",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Wrong limit",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "17de5ece-5632-4e43-83c0-7caa36eaedee",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Search",
                "timedOut": false,
                "duration": 329,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?search=Intel\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hardware_fields);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c7b80789-8669-46cd-9c3e-b545779e5a2b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Wrong filter",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7770f80f-0ac4-4f11-bb86-56f6d9defbe8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Wrong Sort",
                "timedOut": false,
                "duration": 298,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "075b714b-5c5e-4d5c-b74c-7038797c9d78",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: ram_total",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Filter: ram_total",
                "timedOut": false,
                "duration": 319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?ram_total=\" + expected_ram_total)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['ram']);\n        res.body.data.items[0].ram.total.should.be.equal(expected_ram_total);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ddf88ac0-0a78-4bf8-845f-ed274af61b54",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: cpu_cores",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Filter: cpu_cores",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?cpu_cores=\" + expected_cpu_cores)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['cpu']);\n        res.body.data.items[0].cpu.cores.should.be.equal(expected_cpu_cores);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "020ac028-9ffd-4b00-9bc6-050310b3e54a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: cpu_mhz",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Filter: cpu_mhz",
                "timedOut": false,
                "duration": 328,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?cpu_mhz=\" + expected_cpu_mhz)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['cpu']);\n        res.body.data.items[0].cpu.mhz.should.be.equal(expected_cpu_mhz);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "27ef3633-6fc5-4acb-9cdd-a95a6c2cb2b0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: board_serial",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Filter: board_serial",
                "timedOut": false,
                "duration": 354,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?board_serial=\" + expected_board_serial)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['board_serial']);\n        res.body.data.items[0].board_serial.should.be.equal(expected_board_serial);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1378a988-0072-4e90-95dc-bdb286c14a00",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/experimental/syscollector/hardware Query",
                "timedOut": false,
                "duration": 328,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/hardware?q=cpu_cores>0;ram_usage<1000\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].cpu.cores.should.be.above(0);\n        res.body.data.items[0].cpu.cores.should.be.below(1000);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "25a46b1b-ca32-4248-9c6b-b03f08cf463a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ba00336b-7146-4d87-92cb-d8c8d589653b",
              "439428b3-0587-437d-95b6-e6ca0f53d664",
              "684de7dd-1458-48b5-b577-65e148000721",
              "6b06af57-f933-4b0e-a48c-5975fdae9627",
              "17de5ece-5632-4e43-83c0-7caa36eaedee",
              "c7b80789-8669-46cd-9c3e-b545779e5a2b",
              "7770f80f-0ac4-4f11-bb86-56f6d9defbe8",
              "075b714b-5c5e-4d5c-b74c-7038797c9d78",
              "ddf88ac0-0a78-4bf8-845f-ed274af61b54",
              "020ac028-9ffd-4b00-9bc6-050310b3e54a",
              "27ef3633-6fc5-4acb-9cdd-a95a6c2cb2b0",
              "1378a988-0072-4e90-95dc-bdb286c14a00",
              "25a46b1b-ca32-4248-9c6b-b03f08cf463a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3658,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "b73c3ecc-cabe-4eca-9a2e-9265317b6435",
            "title": "GET/experimental/syscollector/processes",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes \"before all\" hook",
                "timedOut": false,
                "duration": 312,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_state = res.body.data.items[0].state;\n        expected_ppid = res.body.data.items[0].ppid;\n        expected_egroup = res.body.data.items[0].egroup;\n        expected_euser = res.body.data.items[0].euser;\n        expected_fgroup = res.body.data.items[0].fgroup;\n        expected_name = res.body.data.items[0].name;\n        expected_nlwp = res.body.data.items[0].nlwp;\n        expected_pgrp = res.body.data.items[0].pgrp;\n        expected_priority = res.body.data.items[0].priority;\n        expected_rgroup = res.body.data.items[0].rgroup;\n        expected_ruser = res.body.data.items[0].ruser;\n        expected_sgroup = res.body.data.items[0].sgroup;\n        expected_suser = res.body.data.items[0].suser;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "771c42fa-8bd3-4fac-bc3a-5963b871d540",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Request",
                "timedOut": false,
                "duration": 335,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(processes_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "daf199ac-ccde-4175-aaa3-969bdfbd4955",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Selector",
                "timedOut": false,
                "duration": 335,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?select=tty,sgroup,share,session,scan_id\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['tty', 'sgroup', 'share', 'session', 'scan']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8135b278-eaac-4466-a561-1055d21d3546",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Not allowed selector",
                "timedOut": false,
                "duration": 314,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "576d7457-83cb-4000-8530-2c3e81fa36fe",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Pagination",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7112a0fd-26f5-4846-b1da-1a2af620b5b5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Wrong limit",
                "timedOut": false,
                "duration": 106,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "186d4c2e-d225-4a5d-8e9c-6e7b646f0758",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Search",
                "timedOut": false,
                "duration": 432,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?search=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d3ec6fa1-4904-476c-ad61-46e995271684",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Wrong filter",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "5b488e2d-b391-4dca-9764-315a892528f4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Wrong Sort",
                "timedOut": false,
                "duration": 314,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "78cdb40a-bf25-4762-9f37-78dc7c95fe6e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: state",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: state",
                "timedOut": false,
                "duration": 325,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&state=\" + expected_state)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].state.should.be.equal(expected_state);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7d6d64b1-bf8e-4482-97fc-4167286dad30",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: ppid",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: ppid",
                "timedOut": false,
                "duration": 310,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&ppid=\" + expected_ppid)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].ppid.should.be.equal(expected_ppid);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9ab0878f-200d-4454-ae08-f5f137237e1c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: egroup",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: egroup",
                "timedOut": false,
                "duration": 324,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&egroup=\" + expected_egroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].egroup.should.be.equal(expected_egroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "5351ceec-b037-4872-872d-0c5e70870009",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: euser",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: euser",
                "timedOut": false,
                "duration": 313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&euser=\" + expected_euser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].euser.should.be.equal(expected_euser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "716f7b2a-a974-4a07-bddf-e0357a0206c6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: fgroup",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: fgroup",
                "timedOut": false,
                "duration": 316,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&fgroup=\" + expected_fgroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].fgroup.should.be.equal(expected_fgroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "fc3de447-7d37-44dc-b366-b474bdfc6298",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: name",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: name",
                "timedOut": false,
                "duration": 334,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?name=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "564e036c-f23e-4776-b6a8-c92d8b696133",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: nlwp",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: nlwp",
                "timedOut": false,
                "duration": 314,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&nlwp=\" + expected_nlwp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].nlwp.should.be.equal(expected_nlwp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "077f10e1-fb9b-4070-a488-39ea1e393f5b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: pgrp",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: pgrp",
                "timedOut": false,
                "duration": 329,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?pgrp=\" + expected_pgrp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].pgrp.should.be.equal(expected_pgrp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ddb23b52-7b2f-40fc-8dbb-8540da7b6a6c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: priority",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: priority",
                "timedOut": false,
                "duration": 310,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&priority=\" + expected_priority)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].priority.should.be.equal(expected_priority);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ae99ac45-e1b8-4a68-8658-33e0657464e3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rgroup",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: rgroup",
                "timedOut": false,
                "duration": 304,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&rgroup=\" + expected_rgroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].rgroup.should.be.equal(expected_rgroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f533edc5-dcca-4b28-996e-f5afc605e27f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: ruser",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: ruser",
                "timedOut": false,
                "duration": 305,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&ruser=\" + expected_ruser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].ruser.should.be.equal(expected_ruser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "5c4f8c98-7ef3-45e6-bd6a-3d95870a081a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: sgroup",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: sgroup",
                "timedOut": false,
                "duration": 309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&sgroup=\" + expected_sgroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].sgroup.should.be.equal(expected_sgroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f93b24b5-fbc9-4da6-8372-98178be57888",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: suser",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Filter: suser",
                "timedOut": false,
                "duration": 320,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&suser=\" + expected_suser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].suser.should.be.equal(expected_suser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9bc1d41e-1c8a-44f1-9bf0-53dbeca27c78",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/experimental/syscollector/processes Query",
                "timedOut": false,
                "duration": 314,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/processes?limit=2&offset=1&q=suser!=\" + expected_suser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].suser.should.not.be.equal(expected_suser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c2a2086d-f878-4300-8652-080a38e44030",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "daf199ac-ccde-4175-aaa3-969bdfbd4955",
              "8135b278-eaac-4466-a561-1055d21d3546",
              "576d7457-83cb-4000-8530-2c3e81fa36fe",
              "7112a0fd-26f5-4846-b1da-1a2af620b5b5",
              "186d4c2e-d225-4a5d-8e9c-6e7b646f0758",
              "d3ec6fa1-4904-476c-ad61-46e995271684",
              "5b488e2d-b391-4dca-9764-315a892528f4",
              "78cdb40a-bf25-4762-9f37-78dc7c95fe6e",
              "7d6d64b1-bf8e-4482-97fc-4167286dad30",
              "9ab0878f-200d-4454-ae08-f5f137237e1c",
              "5351ceec-b037-4872-872d-0c5e70870009",
              "716f7b2a-a974-4a07-bddf-e0357a0206c6",
              "fc3de447-7d37-44dc-b366-b474bdfc6298",
              "564e036c-f23e-4776-b6a8-c92d8b696133",
              "077f10e1-fb9b-4070-a488-39ea1e393f5b",
              "ddb23b52-7b2f-40fc-8dbb-8540da7b6a6c",
              "ae99ac45-e1b8-4a68-8658-33e0657464e3",
              "f533edc5-dcca-4b28-996e-f5afc605e27f",
              "5c4f8c98-7ef3-45e6-bd6a-3d95870a081a",
              "f93b24b5-fbc9-4da6-8372-98178be57888",
              "9bc1d41e-1c8a-44f1-9bf0-53dbeca27c78",
              "c2a2086d-f878-4300-8652-080a38e44030"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6654,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "7476e8e2-b748-41e3-a8eb-99b4076f38eb",
            "title": "GET/experimental/syscollector/ports",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports \"before all\" hook",
                "timedOut": false,
                "duration": 310,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_protocol = res.body.data.items[0].protocol;\n        expected_local_ip = res.body.data.items[0].local.ip;\n        expected_local_port = res.body.data.items[0].local.port;\n        expected_remote_ip = res.body.data.items[0].remote.ip;\n        expected_tx_queue = res.body.data.items[0].tx_queue;\n        expected_state = res.body.data.items[0].state;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "bc6973da-59e5-4e39-b02c-d045fccb26e0",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Request",
                "timedOut": false,
                "duration": 342,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(ports_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9e276f40-27f7-4ab0-b481-3277cce813de",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Selector",
                "timedOut": false,
                "duration": 320,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?select=protocol,remote_ip,tx_queue,state\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['protocol', 'remote', 'tx_queue', 'state']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4e48d9a6-0f31-4ecd-bde7-30ba940f719a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Not allowed selector",
                "timedOut": false,
                "duration": 295,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2156e9de-e8c8-4843-89e3-2e31034e74b0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Pagination",
                "timedOut": false,
                "duration": 301,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "14b4939e-4f45-49dc-8517-4d90d71890c0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Wrong limit",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "698c3c09-1f73-4669-ba61-680aa7d57e92",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Search",
                "timedOut": false,
                "duration": 332,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?search=\" + expected_remote_ip)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].remote.ip.should.be.equal(expected_remote_ip);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a6cff8d9-ead8-4aa8-a910-f7791b8ca72d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Wrong filter",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d1e9a537-3dfd-45de-8bb6-fda8bd07454c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Wrong Sort",
                "timedOut": false,
                "duration": 292,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c124f2c5-21cd-43c9-b567-4e73ad20587a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: protocol",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Filter: protocol",
                "timedOut": false,
                "duration": 319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?protocol=\" + expected_protocol)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].protocol.should.be.equal(expected_protocol);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "10f70db2-44da-4eb3-947b-c974c0fa46a1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: local_ip",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Filter: local_ip",
                "timedOut": false,
                "duration": 322,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?local_ip=\" + expected_local_ip)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].local.ip.should.be.equal(expected_local_ip);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "b8db489c-f036-479e-a564-f91a0c004a2f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: local_port",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Filter: local_port",
                "timedOut": false,
                "duration": 312,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?local_port=\" + expected_local_port)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].local.port.should.be.equal(expected_local_port);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0ac99608-06bc-4254-930e-92d6e6e24fe2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: remote_ip",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Filter: remote_ip",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?remote_ip=\" + expected_remote_ip)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].remote.ip.should.be.equal(expected_remote_ip);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e01fa846-89a9-442b-84f0-c695fd41af73",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_queue",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Filter: tx_queue",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?tx_queue=\" + expected_tx_queue)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].tx_queue.should.be.equal(expected_tx_queue);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "af7a18f2-a6e4-4062-ba41-000862a5bd86",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: state",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Filter: state",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?state=\" + expected_state)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].state.should.be.equal(expected_state);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "47a6ec13-6fc5-460d-9baa-ecb4030180af",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/experimental/syscollector/ports Query",
                "timedOut": false,
                "duration": 316,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/ports?q=state!=\" + expected_state + ';tx_queue>100')\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a1da7515-979b-4fe8-9659-6cf656d2922a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9e276f40-27f7-4ab0-b481-3277cce813de",
              "4e48d9a6-0f31-4ecd-bde7-30ba940f719a",
              "2156e9de-e8c8-4843-89e3-2e31034e74b0",
              "14b4939e-4f45-49dc-8517-4d90d71890c0",
              "698c3c09-1f73-4669-ba61-680aa7d57e92",
              "a6cff8d9-ead8-4aa8-a910-f7791b8ca72d",
              "d1e9a537-3dfd-45de-8bb6-fda8bd07454c",
              "c124f2c5-21cd-43c9-b567-4e73ad20587a",
              "10f70db2-44da-4eb3-947b-c974c0fa46a1",
              "b8db489c-f036-479e-a564-f91a0c004a2f",
              "0ac99608-06bc-4254-930e-92d6e6e24fe2",
              "e01fa846-89a9-442b-84f0-c695fd41af73",
              "af7a18f2-a6e4-4062-ba41-000862a5bd86",
              "47a6ec13-6fc5-460d-9baa-ecb4030180af",
              "a1da7515-979b-4fe8-9659-6cf656d2922a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4255,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "943cbf87-878f-443c-a8e2-cae5d6bdfa95",
            "title": "GET/syscollector/netaddr",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/netaddr \"before all\" hook",
                "timedOut": false,
                "duration": 301,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_iface = res.body.data.items[0].iface;\n        expected_proto = res.body.data.items[0].proto;\n        expected_address = res.body.data.items[0].address;\n        expected_broadcast = res.body.data.items[0].broadcast;\n        expected_netmask = res.body.data.items[0].netmask;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "91275d5f-af1d-4afa-bcac-9d937b09d091",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/netaddr Request",
                "timedOut": false,
                "duration": 312,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "abc1e23e-2675-439f-8d56-b8413e63675f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/netaddr Selector",
                "timedOut": false,
                "duration": 310,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?select=proto,netmask,broadcast\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['proto', 'netmask', 'broadcast']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4de131cb-0129-42a3-a045-f3bd4e7edd54",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/netaddr Not allowed selector",
                "timedOut": false,
                "duration": 291,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3cf1c1d9-7814-4b4b-a153-b2c7099ae832",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/netaddr Pagination",
                "timedOut": false,
                "duration": 300,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f101ef5d-d5c9-49dd-8542-e7724c39f91f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/netaddr Wrong limit",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "bedbc431-3772-4743-b433-7a7fc33ea720",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/netaddr Search",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?search=\" + expected_broadcast)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].broadcast.should.be.equal(expected_broadcast);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "02dfede1-0a1d-44b1-90f6-51b2ccabe61b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/syscollector/netaddr Wrong filter",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9d6a8a3d-f76b-41dc-9b02-45bae4fa5e93",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/syscollector/netaddr Wrong Sort",
                "timedOut": false,
                "duration": 290,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "eb74eccc-e9f9-4ae4-a692-ce655da08a85",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: iface",
                "fullTitle": "Syscollector GET/syscollector/netaddr Filter: iface",
                "timedOut": false,
                "duration": 313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?iface=\" + expected_iface)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].iface.should.be.equal(expected_iface);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "67dab261-b969-454f-9161-5f9508c9b9f7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: proto",
                "fullTitle": "Syscollector GET/syscollector/netaddr Filter: proto",
                "timedOut": false,
                "duration": 313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?proto=\" + expected_proto)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].proto.should.be.equal(expected_proto);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4f1721ab-591a-4194-9a44-29f55d8520f4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: address",
                "fullTitle": "Syscollector GET/syscollector/netaddr Filter: address",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?address=\" + expected_address)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].address.should.be.equal(expected_address);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "07f988bb-67a1-4aab-9466-93b5b441396e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: broadcast",
                "fullTitle": "Syscollector GET/syscollector/netaddr Filter: broadcast",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?broadcast=\" + expected_broadcast)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].broadcast.should.be.equal(expected_broadcast);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e40c54a7-2d76-48d2-9f18-08238df28131",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: netmask",
                "fullTitle": "Syscollector GET/syscollector/netaddr Filter: netmask",
                "timedOut": false,
                "duration": 309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?netmask=\" + expected_netmask)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].netmask.should.be.equal(expected_netmask);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "98dfdf45-92df-4f5a-b15b-2405ae9349c2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/syscollector/netaddr Query",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netaddr?q=netmask=\" + expected_netmask)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].netmask.should.be.equal(expected_netmask);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "99e6f78c-aefd-4bf2-840d-21e490843948",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "abc1e23e-2675-439f-8d56-b8413e63675f",
              "4de131cb-0129-42a3-a045-f3bd4e7edd54",
              "3cf1c1d9-7814-4b4b-a153-b2c7099ae832",
              "f101ef5d-d5c9-49dd-8542-e7724c39f91f",
              "bedbc431-3772-4743-b433-7a7fc33ea720",
              "02dfede1-0a1d-44b1-90f6-51b2ccabe61b",
              "9d6a8a3d-f76b-41dc-9b02-45bae4fa5e93",
              "eb74eccc-e9f9-4ae4-a692-ce655da08a85",
              "67dab261-b969-454f-9161-5f9508c9b9f7",
              "4f1721ab-591a-4194-9a44-29f55d8520f4",
              "07f988bb-67a1-4aab-9466-93b5b441396e",
              "e40c54a7-2d76-48d2-9f18-08238df28131",
              "98dfdf45-92df-4f5a-b15b-2405ae9349c2",
              "99e6f78c-aefd-4bf2-840d-21e490843948"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3844,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "55950cb9-b39f-49b0-8528-b171e8f4f928",
            "title": "GET/experimental/syscollector/netproto",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto \"before all\" hook",
                "timedOut": false,
                "duration": 297,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_iface = res.body.data.items[0].iface;\n        expected_type = res.body.data.items[0].type;\n        expected_gateway = res.body.data.items[0].gateway;\n        expected_dhcp = res.body.data.items[0].dhcp;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "59f32748-fd68-41fd-86eb-f23e8060bc32",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Request",
                "timedOut": false,
                "duration": 309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7dcf2468-cfc6-48e0-8dc2-a8949ba5248e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Selector",
                "timedOut": false,
                "duration": 310,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?select=iface,gateway,dhcp\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['iface', 'gateway', 'dhcp']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8e4e3318-7f9d-4f92-a709-e2cae26f9b1a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Not allowed selector",
                "timedOut": false,
                "duration": 294,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ce24b880-2bb1-471d-9419-6d2ba526e29e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Pagination",
                "timedOut": false,
                "duration": 295,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "798741e5-5d3f-40a6-a00a-6180c7e9ae29",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Wrong limit",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2d582863-19f4-4872-b6be-afb82072f25e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Search",
                "timedOut": false,
                "duration": 314,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?search=\" + expected_dhcp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].dhcp.should.be.equal(expected_dhcp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d35ecf20-80fb-435e-aac5-9f4466a85cce",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Wrong filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "28e7b62d-6f08-4998-a72b-0c10d663e564",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Wrong Sort",
                "timedOut": false,
                "duration": 294,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ed673005-1c02-43c4-b40f-e9eb2e8402cf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: iface",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Filter: iface",
                "timedOut": false,
                "duration": 309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?iface=\" + expected_iface)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].iface.should.be.equal(expected_iface);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8b5a00a9-96f0-4c55-be0b-3b6ea7c3ab1a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: type",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Filter: type",
                "timedOut": false,
                "duration": 313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?type=\" + expected_type)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].type.should.be.equal(expected_type);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "96a702c1-86b3-412b-855f-b5e605c608a4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: gateway",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Filter: gateway",
                "timedOut": false,
                "duration": 308,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?gateway=\" + expected_gateway)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].gateway.should.be.equal(expected_gateway);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2df1c264-99f7-4261-b8e4-a5b4bc730fc1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: dhcp",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Filter: dhcp",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?dhcp=\" + expected_dhcp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].dhcp.should.be.equal(expected_dhcp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "cad50111-f161-4a08-a99c-5011932ed360",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/experimental/syscollector/netproto Query",
                "timedOut": false,
                "duration": 311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netproto?q=type=ipv4,iface=eth0\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "90dfb1ee-c155-4077-b311-a2543de95b0d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7dcf2468-cfc6-48e0-8dc2-a8949ba5248e",
              "8e4e3318-7f9d-4f92-a709-e2cae26f9b1a",
              "ce24b880-2bb1-471d-9419-6d2ba526e29e",
              "798741e5-5d3f-40a6-a00a-6180c7e9ae29",
              "2d582863-19f4-4872-b6be-afb82072f25e",
              "d35ecf20-80fb-435e-aac5-9f4466a85cce",
              "28e7b62d-6f08-4998-a72b-0c10d663e564",
              "ed673005-1c02-43c4-b40f-e9eb2e8402cf",
              "8b5a00a9-96f0-4c55-be0b-3b6ea7c3ab1a",
              "96a702c1-86b3-412b-855f-b5e605c608a4",
              "2df1c264-99f7-4261-b8e4-a5b4bc730fc1",
              "cad50111-f161-4a08-a99c-5011932ed360",
              "90dfb1ee-c155-4077-b311-a2543de95b0d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3523,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "386b2c86-5e73-483b-9917-086edd3423a7",
            "title": "GET/experimental/syscollector/netiface",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface \"before all\" hook",
                "timedOut": false,
                "duration": 306,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_name = res.body.data.items[0].name;\n        expected_adapter = res.body.data.items[0].adapter;\n        expected_type = res.body.data.items[0].type;\n        expected_state = res.body.data.items[0].state;\n        expected_mtu = res.body.data.items[0].mtu;\n        expected_tx_packets = res.body.data.items[0].tx.packets;\n        expected_rx_packets = res.body.data.items[0].rx.packets;\n        expected_tx_bytes = res.body.data.items[0].tx.bytes;\n        expected_rx_bytes = res.body.data.items[0].rx.bytes;\n        expected_tx_errors = res.body.data.items[0].tx.errors;\n        expected_rx_errors = res.body.data.items[0].rx.errors;\n        expected_tx_dropped = res.body.data.items[0].tx.dropped;\n        expected_rx_dropped = res.body.data.items[0].rx.dropped;\n        expected_mac = res.body.data.items[0].mac;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7a47b80a-007a-4306-a7bb-df7108bb3362",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Request",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e0464cf8-b194-4ad6-9874-c8ae6f4a915d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Selector",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?select=type,rx_bytes,tx_errors,tx_dropped,mac\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array);\n        res.body.data.items[0].should.have.properties(['type', 'rx_bytes', 'tx', 'mac']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3505ca29-010b-401a-b46d-58c8a989cc7e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Not allowed selector",
                "timedOut": false,
                "duration": 297,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ab79533b-4242-46c3-aaf1-a3d4000a9c7e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Pagination",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ab40750f-3bd3-4ec2-839b-3843dfaa596b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Wrong limit",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "684b3439-e5a1-41df-a8d8-82f49aae8e08",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Search",
                "timedOut": false,
                "duration": 334,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?search=\" + expected_mac)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].mac.should.be.equal(expected_mac);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "99fdaf5e-6dea-4df7-93f0-ecbb686ac106",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Wrong filter",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "fe6d29d6-b100-4d01-bc12-f92e35dad02b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Wrong Sort",
                "timedOut": false,
                "duration": 306,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0dfa29fb-fa5c-4007-a654-2191dc8e08fe",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: name",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: name",
                "timedOut": false,
                "duration": 334,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?name=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9a97b41e-b6eb-4c76-9839-11b31130bb85",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: type",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: type",
                "timedOut": false,
                "duration": 321,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?type=\" + expected_type)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].type.should.be.equal(expected_type);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "191b902b-6271-4b86-baec-b5f0035959bc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: state",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: state",
                "timedOut": false,
                "duration": 314,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?state=\" + expected_state)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].state.should.be.equal(expected_state);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "41eb4ed2-a7d8-4de7-8359-a92544eacbe5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: mtu",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: mtu",
                "timedOut": false,
                "duration": 320,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?mtu=\" + expected_mtu)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].mtu.should.be.equal(expected_mtu);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9a4404a5-c5d5-4c11-a4a7-53da87589990",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_packets",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: tx_packets",
                "timedOut": false,
                "duration": 310,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?tx_packets=\" + expected_tx_packets)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.packets.should.be.equal(expected_tx_packets);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "edd77d72-0b87-483b-9407-742dd9601124",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_packets",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: rx_packets",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?rx_packets=\" + expected_rx_packets)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.packets.should.be.equal(expected_rx_packets);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "6be0e095-88c4-42f6-b9ea-d3decc9b53bd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_bytes",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: tx_bytes",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?tx_bytes=\" + expected_tx_bytes)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.bytes.should.be.equal(expected_tx_bytes);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "88c14d9b-d477-41ac-afa2-2cffcd605c58",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_bytes",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: rx_bytes",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?rx_bytes=\" + expected_rx_bytes)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.bytes.should.be.equal(expected_rx_bytes);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d4da37cf-0876-44ab-ac1f-e4a81ccb39dd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_errors",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: tx_errors",
                "timedOut": false,
                "duration": 319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?tx_errors=\" + expected_tx_errors)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.errors.should.be.equal(expected_tx_errors);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3238a2ec-77cf-400a-aa90-d7f00849dd86",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_errors",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: rx_errors",
                "timedOut": false,
                "duration": 315,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?rx_errors=\" + expected_rx_errors)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.errors.should.be.equal(expected_rx_errors);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "b021fef4-d28e-4f37-b9e3-e520019c999a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_dropped",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: tx_dropped",
                "timedOut": false,
                "duration": 320,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?tx_dropped=\" + expected_tx_dropped)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.dropped.should.be.equal(expected_tx_dropped);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "64c9b94e-63d2-47d9-92e2-65facfa51f8a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_dropped",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Filter: rx_dropped",
                "timedOut": false,
                "duration": 328,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?rx_dropped=\" + expected_rx_dropped)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.dropped.should.be.equal(expected_rx_dropped);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "dcb8d189-4cd5-4d0c-8d35-774945cf574d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/experimental/syscollector/netiface Query",
                "timedOut": false,
                "duration": 319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/experimental/syscollector/netiface?q=rx_dropped>\" + expected_rx_dropped)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ca50f777-7353-4e4c-a62e-043ed09283c3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e0464cf8-b194-4ad6-9874-c8ae6f4a915d",
              "3505ca29-010b-401a-b46d-58c8a989cc7e",
              "ab79533b-4242-46c3-aaf1-a3d4000a9c7e",
              "ab40750f-3bd3-4ec2-839b-3843dfaa596b",
              "684b3439-e5a1-41df-a8d8-82f49aae8e08",
              "99fdaf5e-6dea-4df7-93f0-ecbb686ac106",
              "fe6d29d6-b100-4d01-bc12-f92e35dad02b",
              "0dfa29fb-fa5c-4007-a654-2191dc8e08fe",
              "9a97b41e-b6eb-4c76-9839-11b31130bb85",
              "191b902b-6271-4b86-baec-b5f0035959bc",
              "41eb4ed2-a7d8-4de7-8359-a92544eacbe5",
              "9a4404a5-c5d5-4c11-a4a7-53da87589990",
              "edd77d72-0b87-483b-9407-742dd9601124",
              "6be0e095-88c4-42f6-b9ea-d3decc9b53bd",
              "88c14d9b-d477-41ac-afa2-2cffcd605c58",
              "d4da37cf-0876-44ab-ac1f-e4a81ccb39dd",
              "3238a2ec-77cf-400a-aa90-d7f00849dd86",
              "b021fef4-d28e-4f37-b9e3-e520019c999a",
              "64c9b94e-63d2-47d9-92e2-65facfa51f8a",
              "dcb8d189-4cd5-4d0c-8d35-774945cf574d",
              "ca50f777-7353-4e4c-a62e-043ed09283c3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6191,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "ad9263c5-e249-441e-9a7e-1bfaa0b8496b",
            "title": "GET/syscollector/000/processes",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/000/processes \"before all\" hook",
                "timedOut": false,
                "duration": 352,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_state = res.body.data.items[0].state;\n        expected_ppid = res.body.data.items[0].ppid;\n        expected_egroup = res.body.data.items[0].egroup;\n        expected_euser = res.body.data.items[0].euser;\n        expected_fgroup = res.body.data.items[0].fgroup;\n        expected_name = res.body.data.items[0].name;\n        expected_nlwp = res.body.data.items[0].nlwp;\n        expected_pgrp = res.body.data.items[0].pgrp;\n        expected_priority = res.body.data.items[0].priority;\n        expected_rgroup = res.body.data.items[0].rgroup;\n        expected_ruser = res.body.data.items[0].ruser;\n        expected_sgroup = res.body.data.items[0].sgroup;\n        expected_suser = res.body.data.items[0].suser;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "49eacce6-e702-49bb-a18a-156487901851",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/000/processes Request",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(processes_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e7efc032-5c32-431f-bf5f-dd5206eda7aa",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/000/processes Selector",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?select=tty,sgroup,share,session,scan_id\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['tty', 'sgroup', 'share', 'session', 'scan']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3df3c2a6-be67-4232-a26d-3cd40647dbad",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/000/processes Not allowed selector",
                "timedOut": false,
                "duration": 266,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "67eaf7ba-765a-44f1-91b0-737cc1dfecdf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/000/processes Pagination",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "53979b1b-44f7-4a86-8bcd-654254c7ee9a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/000/processes Wrong limit",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2f098b43-84ca-4e93-b1f4-4914ba5306a3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/000/processes Search",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?search=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f06d54de-d5be-4b10-b1e7-f4df70890ab3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/syscollector/000/processes Wrong filter",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d6005013-7380-4387-aff6-3af761f6becf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/syscollector/000/processes Wrong Sort",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1b0d41e3-449c-43ef-be3a-8bb7873456de",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: state",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: state",
                "timedOut": false,
                "duration": 281,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&state=\" + expected_state)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].state.should.be.equal(expected_state);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1b45ae7e-4d8d-4b5b-8c20-0baccd97bff4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: ppid",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: ppid",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&ppid=\" + expected_ppid)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].ppid.should.be.equal(expected_ppid);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "09f7ebc4-3064-4f29-9d17-49495b3061fa",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: egroup",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: egroup",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&egroup=\" + expected_egroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].egroup.should.be.equal(expected_egroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "987f8ee1-a324-46c0-86ff-88b322fe8c7a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: euser",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: euser",
                "timedOut": false,
                "duration": 291,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&euser=\" + expected_euser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].euser.should.be.equal(expected_euser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1a8f27a3-8d1f-40d6-803e-a94dc79f79a6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: fgroup",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: fgroup",
                "timedOut": false,
                "duration": 286,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&fgroup=\" + expected_fgroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].fgroup.should.be.equal(expected_fgroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8b39ab4f-b23d-480d-bbaa-e21f4168577d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: name",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: name",
                "timedOut": false,
                "duration": 290,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?name=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0cbe9819-b612-4d30-b3e9-55ae06cbbc57",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: nlwp",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: nlwp",
                "timedOut": false,
                "duration": 272,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&nlwp=\" + expected_nlwp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].nlwp.should.be.equal(expected_nlwp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7227c405-6611-4679-b3ec-c4ed6b982a6d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: pgrp",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: pgrp",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?pgrp=\" + expected_pgrp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].pgrp.should.be.equal(expected_pgrp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "88dfae78-995f-4a40-8155-c1d1f967768e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: priority",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: priority",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&priority=\" + expected_priority)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].priority.should.be.equal(expected_priority);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7e8a661b-4593-47ad-a143-e215195d46a2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rgroup",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: rgroup",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&rgroup=\" + expected_rgroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].rgroup.should.be.equal(expected_rgroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f8fd4b17-1da6-4015-a50a-b4f344a3b14b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: ruser",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: ruser",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&ruser=\" + expected_ruser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].ruser.should.be.equal(expected_ruser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "bb887d88-f9bc-4a40-a7c6-8183d923f254",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: sgroup",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: sgroup",
                "timedOut": false,
                "duration": 274,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&sgroup=\" + expected_sgroup)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].sgroup.should.be.equal(expected_sgroup);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c7f3927e-6dca-494f-ac20-704cfbfdf91f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: suser",
                "fullTitle": "Syscollector GET/syscollector/000/processes Filter: suser",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?limit=2&offset=1&suser=\" + expected_suser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].suser.should.be.equal(expected_suser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4b8b983c-4ecf-4d2f-9f30-642fb30b3322",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/syscollector/000/processes Query",
                "timedOut": false,
                "duration": 284,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/processes?q=suser!=\" + expected_suser)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(processes_properties);\n        res.body.data.items[0].suser.should.not.be.equal(expected_suser);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d1930649-e4a3-471f-940b-fdfda958eddc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e7efc032-5c32-431f-bf5f-dd5206eda7aa",
              "3df3c2a6-be67-4232-a26d-3cd40647dbad",
              "67eaf7ba-765a-44f1-91b0-737cc1dfecdf",
              "53979b1b-44f7-4a86-8bcd-654254c7ee9a",
              "2f098b43-84ca-4e93-b1f4-4914ba5306a3",
              "f06d54de-d5be-4b10-b1e7-f4df70890ab3",
              "d6005013-7380-4387-aff6-3af761f6becf",
              "1b0d41e3-449c-43ef-be3a-8bb7873456de",
              "1b45ae7e-4d8d-4b5b-8c20-0baccd97bff4",
              "09f7ebc4-3064-4f29-9d17-49495b3061fa",
              "987f8ee1-a324-46c0-86ff-88b322fe8c7a",
              "1a8f27a3-8d1f-40d6-803e-a94dc79f79a6",
              "8b39ab4f-b23d-480d-bbaa-e21f4168577d",
              "0cbe9819-b612-4d30-b3e9-55ae06cbbc57",
              "7227c405-6611-4679-b3ec-c4ed6b982a6d",
              "88dfae78-995f-4a40-8155-c1d1f967768e",
              "7e8a661b-4593-47ad-a143-e215195d46a2",
              "f8fd4b17-1da6-4015-a50a-b4f344a3b14b",
              "bb887d88-f9bc-4a40-a7c6-8183d923f254",
              "c7f3927e-6dca-494f-ac20-704cfbfdf91f",
              "4b8b983c-4ecf-4d2f-9f30-642fb30b3322",
              "d1930649-e4a3-471f-940b-fdfda958eddc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5682,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "1b348018-0b32-4414-9947-d2737e9525c2",
            "title": "GET/syscollector/000/ports",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/000/ports \"before all\" hook",
                "timedOut": false,
                "duration": 273,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_protocol = res.body.data.items[0].protocol;\n        expected_local_ip = res.body.data.items[0].local.ip;\n        expected_local_port = res.body.data.items[0].local.port;\n        expected_remote_ip = res.body.data.items[0].remote.ip;\n        expected_tx_queue = res.body.data.items[0].tx_queue;\n        expected_state = res.body.data.items[0].state;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7237bfd9-0059-4180-8c6b-58547fc5ac23",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/000/ports Request",
                "timedOut": false,
                "duration": 272,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(ports_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "be108985-b9c7-436e-a817-3bc03476b017",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/000/ports Selector",
                "timedOut": false,
                "duration": 273,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?select=protocol,remote_ip,tx_queue,state\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['protocol', 'remote', 'tx_queue', 'state']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0f2e5965-db25-4e53-847c-e597ad46871d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/000/ports Not allowed selector",
                "timedOut": false,
                "duration": 267,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ee28fee3-1f64-4d0e-b6ef-5e14e1dd3704",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/000/ports Pagination",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "715c1bb4-74ac-455e-8f41-1b1312cab325",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/000/ports Wrong limit",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "8286c689-46f3-4141-8d41-86b307c9637e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/000/ports Search",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?search=\" + expected_remote_ip)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].remote.ip.should.be.equal(expected_remote_ip);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "de7ea54e-994f-432a-b84c-e6f1c7f68167",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/syscollector/000/ports Wrong filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "50006e6e-51e6-410e-aad3-e94ccc055c31",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/syscollector/000/ports Wrong Sort",
                "timedOut": false,
                "duration": 276,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "863b288c-76ae-451e-a25e-d47766539507",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: protocol",
                "fullTitle": "Syscollector GET/syscollector/000/ports Filter: protocol",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?protocol=\" + expected_protocol)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].protocol.should.be.equal(expected_protocol);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "4842944c-08b4-41ac-9305-0a43e22203c2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: local_ip",
                "fullTitle": "Syscollector GET/syscollector/000/ports Filter: local_ip",
                "timedOut": false,
                "duration": 277,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?local_ip=\" + expected_local_ip)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].local.ip.should.be.equal(expected_local_ip);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e9642a93-61a3-4b37-a63f-4e4c81dc94a0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: local_port",
                "fullTitle": "Syscollector GET/syscollector/000/ports Filter: local_port",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?local_port=\" + expected_local_port)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].local.port.should.be.equal(expected_local_port);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "40767fca-9c6c-4c62-bc7a-26974ec394c7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: remote_ip",
                "fullTitle": "Syscollector GET/syscollector/000/ports Filter: remote_ip",
                "timedOut": false,
                "duration": 279,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?remote_ip=\" + expected_remote_ip)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].remote.ip.should.be.equal(expected_remote_ip);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "486543bb-6161-4c15-b4df-33d1d04b5da8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_queue",
                "fullTitle": "Syscollector GET/syscollector/000/ports Filter: tx_queue",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?tx_queue=\" + expected_tx_queue)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].tx_queue.should.be.equal(expected_tx_queue);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c219119b-c305-486f-ab6c-1cf276e9cc5b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: state",
                "fullTitle": "Syscollector GET/syscollector/000/ports Filter: state",
                "timedOut": false,
                "duration": 274,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?state=\" + expected_state)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].state.should.be.equal(expected_state);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1b825565-39e2-4871-bda0-3720fd108eb8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/syscollector/000/ports Query",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/ports?q=state=\" + expected_state)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(ports_properties);\n        res.body.data.items[0].state.should.be.equal(expected_state);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "51272bb0-16ae-481e-8534-b8380c6802c9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "be108985-b9c7-436e-a817-3bc03476b017",
              "0f2e5965-db25-4e53-847c-e597ad46871d",
              "ee28fee3-1f64-4d0e-b6ef-5e14e1dd3704",
              "715c1bb4-74ac-455e-8f41-1b1312cab325",
              "8286c689-46f3-4141-8d41-86b307c9637e",
              "de7ea54e-994f-432a-b84c-e6f1c7f68167",
              "50006e6e-51e6-410e-aad3-e94ccc055c31",
              "863b288c-76ae-451e-a25e-d47766539507",
              "4842944c-08b4-41ac-9305-0a43e22203c2",
              "e9642a93-61a3-4b37-a63f-4e4c81dc94a0",
              "40767fca-9c6c-4c62-bc7a-26974ec394c7",
              "486543bb-6161-4c15-b4df-33d1d04b5da8",
              "c219119b-c305-486f-ab6c-1cf276e9cc5b",
              "1b825565-39e2-4871-bda0-3720fd108eb8",
              "51272bb0-16ae-481e-8534-b8380c6802c9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3753,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "ec7cecc9-b110-45cc-bcf5-4b3a26c32540",
            "title": "GET/syscollector/000/netaddr",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr \"before all\" hook",
                "timedOut": false,
                "duration": 279,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_iface = res.body.data.items[0].iface;\n        expected_proto = res.body.data.items[0].proto;\n        expected_address = res.body.data.items[0].address;\n        expected_broadcast = res.body.data.items[0].broadcast;\n        expected_netmask = res.body.data.items[0].netmask;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "58a2c722-0a58-4c01-b850-b17f42c8153f",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Request",
                "timedOut": false,
                "duration": 276,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "45890494-a1bc-46f6-8bb7-82c8f87ab5ea",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Selector",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?select=proto,netmask,broadcast\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['proto', 'netmask', 'broadcast']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "5f20556a-1be8-4a0a-95e4-cfe34c5d81ed",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Not allowed selector",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "302e24b7-199b-48bb-be5b-43babf7639e2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Pagination",
                "timedOut": false,
                "duration": 277,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "04f9fd63-25da-4c8e-a709-9db50c33a54b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Wrong limit",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "660e2a87-5ec0-43c3-8006-a7dc66e40506",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Search",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?search=\" + expected_broadcast)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].broadcast.should.be.equal(expected_broadcast);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2157eb0f-4867-4056-a9fe-4c6361c6ed0e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Wrong filter",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a6a9d2e2-6888-41f9-a1e0-e3478f45ca5d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Wrong Sort",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "40d0de18-1952-4f8b-ae52-22cb41a70eb6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: iface",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Filter: iface",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?iface=\" + expected_iface)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].iface.should.be.equal(expected_iface);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "41f74587-fae2-48a8-848d-d8fdffaaa08e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: proto",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Filter: proto",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?proto=\" + expected_proto)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].proto.should.be.equal(expected_proto);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "70d34845-ed40-49a9-a69b-417ab4125242",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: address",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Filter: address",
                "timedOut": false,
                "duration": 284,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?address=\" + expected_address)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].address.should.be.equal(expected_address);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f025e993-6a8f-4031-875c-1e1c0acd8c7d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: broadcast",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Filter: broadcast",
                "timedOut": false,
                "duration": 286,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?broadcast=\" + expected_broadcast)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].broadcast.should.be.equal(expected_broadcast);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "2c42bd1a-d90c-4ec0-9512-de855d951c64",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: netmask",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Filter: netmask",
                "timedOut": false,
                "duration": 279,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?netmask=\" + expected_netmask)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].netmask.should.be.equal(expected_netmask);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c43ed3e8-efad-4ca1-8df3-e7622e0532a6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/syscollector/000/netaddr Query",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netaddr?q=netmask=\" + expected_netmask)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netaddr_properties);\n        res.body.data.items[0].netmask.should.be.equal(expected_netmask);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f666fa67-042f-4ecf-9ea5-02f14494a1f1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "45890494-a1bc-46f6-8bb7-82c8f87ab5ea",
              "5f20556a-1be8-4a0a-95e4-cfe34c5d81ed",
              "302e24b7-199b-48bb-be5b-43babf7639e2",
              "04f9fd63-25da-4c8e-a709-9db50c33a54b",
              "660e2a87-5ec0-43c3-8006-a7dc66e40506",
              "2157eb0f-4867-4056-a9fe-4c6361c6ed0e",
              "a6a9d2e2-6888-41f9-a1e0-e3478f45ca5d",
              "40d0de18-1952-4f8b-ae52-22cb41a70eb6",
              "41f74587-fae2-48a8-848d-d8fdffaaa08e",
              "70d34845-ed40-49a9-a69b-417ab4125242",
              "f025e993-6a8f-4031-875c-1e1c0acd8c7d",
              "2c42bd1a-d90c-4ec0-9512-de855d951c64",
              "c43ed3e8-efad-4ca1-8df3-e7622e0532a6",
              "f666fa67-042f-4ecf-9ea5-02f14494a1f1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3518,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "4c131b6c-1ed0-469d-8ad8-65eecab9d8ea",
            "title": "GET/syscollector/000/netproto",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/000/netproto \"before all\" hook",
                "timedOut": false,
                "duration": 282,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_iface = res.body.data.items[0].iface;\n        expected_type = res.body.data.items[0].type;\n        expected_gateway = res.body.data.items[0].gateway;\n        expected_dhcp = res.body.data.items[0].dhcp;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c2dfd5f2-1426-4f42-b487-1454b1745e4c",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Request",
                "timedOut": false,
                "duration": 281,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3197b6ff-17c3-4a99-adc3-73d90bda2745",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Selector",
                "timedOut": false,
                "duration": 276,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?select=iface,gateway,dhcp\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['iface', 'gateway', 'dhcp']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "504e7437-7c9d-4cb5-ad1d-061eb473e8a8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Not allowed selector",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "033f61e9-5f6c-4086-bdcd-a963e27cf2e0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Pagination",
                "timedOut": false,
                "duration": 287,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "dd968531-0b7c-4a12-942a-ab77f0a4f83d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Wrong limit",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d2f02e42-6657-44f7-8f99-801f6b63d32b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Search",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?search=\" + expected_dhcp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].dhcp.should.be.equal(expected_dhcp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "dc73440a-a770-4dcd-8593-15ab7504f0fd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Wrong filter",
                "timedOut": false,
                "duration": 78,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "b4740f2f-f91c-42d1-98f3-cbaa415bdc08",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Wrong Sort",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e44a3db4-3cf1-42b2-941e-e228fa2cce11",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: iface",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Filter: iface",
                "timedOut": false,
                "duration": 285,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?iface=\" + expected_iface)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].iface.should.be.equal(expected_iface);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "bace0c9c-cdfb-4346-979e-43d874e10a93",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: type",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Filter: type",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?type=\" + expected_type)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].type.should.be.equal(expected_type);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "971f97ce-3a6d-4b61-ab5c-e85bd9da0e67",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: gateway",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Filter: gateway",
                "timedOut": false,
                "duration": 284,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?gateway=\" + expected_gateway)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].gateway.should.be.equal(expected_gateway);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d7dd1b12-4a16-4e06-a37f-dd9af1e424c4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: dhcp",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Filter: dhcp",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?dhcp=\" + expected_dhcp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netproto_properties);\n        res.body.data.items[0].dhcp.should.be.equal(expected_dhcp);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "af67914f-dc20-4184-9633-14f48eac292b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/syscollector/000/netproto Query",
                "timedOut": false,
                "duration": 284,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netproto?q=dhcp!=\" + expected_dhcp)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0665338e-067c-4ed7-9c63-99064a1c3302",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3197b6ff-17c3-4a99-adc3-73d90bda2745",
              "504e7437-7c9d-4cb5-ad1d-061eb473e8a8",
              "033f61e9-5f6c-4086-bdcd-a963e27cf2e0",
              "dd968531-0b7c-4a12-942a-ab77f0a4f83d",
              "d2f02e42-6657-44f7-8f99-801f6b63d32b",
              "dc73440a-a770-4dcd-8593-15ab7504f0fd",
              "b4740f2f-f91c-42d1-98f3-cbaa415bdc08",
              "e44a3db4-3cf1-42b2-941e-e228fa2cce11",
              "bace0c9c-cdfb-4346-979e-43d874e10a93",
              "971f97ce-3a6d-4b61-ab5c-e85bd9da0e67",
              "d7dd1b12-4a16-4e06-a37f-dd9af1e424c4",
              "af67914f-dc20-4184-9633-14f48eac292b",
              "0665338e-067c-4ed7-9c63-99064a1c3302"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3244,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "7a6ef0a3-adae-4954-96d7-e5225cbc96c7",
            "title": "GET/syscollector/000/netiface",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/000/netiface \"before all\" hook",
                "timedOut": false,
                "duration": 292,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        expected_name = res.body.data.items[0].name;\n        expected_adapter = res.body.data.items[0].adapter;\n        expected_type = res.body.data.items[0].type;\n        expected_state = res.body.data.items[0].state;\n        expected_mtu = res.body.data.items[0].mtu;\n        expected_tx_packets = res.body.data.items[0].tx.packets;\n        expected_rx_packets = res.body.data.items[0].rx.packets;\n        expected_tx_bytes = res.body.data.items[0].tx.bytes;\n        expected_rx_bytes = res.body.data.items[0].rx.bytes;\n        expected_tx_errors = res.body.data.items[0].tx.errors;\n        expected_rx_errors = res.body.data.items[0].rx.errors;\n        expected_tx_dropped = res.body.data.items[0].tx.dropped;\n        expected_rx_dropped = res.body.data.items[0].rx.dropped;\n        expected_mac = res.body.data.items[0].mac;\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "776de8ba-3578-4721-9a7a-eb5cd8366419",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Request",
                "timedOut": false,
                "duration": 293,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "230a5a25-2fd7-46f4-98a0-75bfacf6053a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Selector",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?select=type,rx_bytes,tx_errors,tx_dropped,mac\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array);\n        res.body.data.items[0].should.have.properties(['type', 'rx_bytes', 'tx', 'mac']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "517069c1-8e4d-4257-930f-7d61e8426603",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Not allowed selector",
                "timedOut": false,
                "duration": 287,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?select=wrongParam\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1724);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d7b91302-7f64-4a22-ba47-ce8a3d4cf482",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Pagination",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?offset=0&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.items.should.be.instanceof(Array).and.have.lengthOf(1);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "10b29908-c9bb-4609-951c-0501cadbdb61",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Wrong limit",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?offset=0&limit=1a\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(600);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9ed4f7bd-ce97-4a39-b495-6b06fbe72e59",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Search",
                "timedOut": false,
                "duration": 317,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?search=\" + expected_mac)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.error.should.equal(0);\n        res.body.data.totalItems.should.be.above(0);\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].mac.should.be.equal(expected_mac);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "7bf2543e-e9ba-4885-a9ba-2dea3cf0315c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong filter",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Wrong filter",
                "timedOut": false,
                "duration": 82,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?wrongFilter=value\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(400)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(604);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "902dbfb7-e9f7-461e-8577-3e6e975248f9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong Sort",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Wrong Sort",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?sort=-wrongParameter\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'message']);\n        res.body.error.should.equal(1403);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "c2947c6c-3eaf-4756-82df-b38875be3d1d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: name",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: name",
                "timedOut": false,
                "duration": 296,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?name=\" + expected_name)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].name.should.be.equal(expected_name);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "129d5053-dde2-4fb7-bc63-c7691d7ebded",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: type",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: type",
                "timedOut": false,
                "duration": 286,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?type=\" + expected_type)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].type.should.be.equal(expected_type);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3e1795ca-49c8-48c4-a0e5-a65e82ef54ac",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: state",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: state",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?state=\" + expected_state)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].state.should.be.equal(expected_state);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "debc1a37-e69d-4e08-9128-5e1b0725ef49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: mtu",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: mtu",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?mtu=\" + expected_mtu)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].mtu.should.be.equal(expected_mtu);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "3640eca9-4072-46ba-b66a-7ddb2478e760",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_packets",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: tx_packets",
                "timedOut": false,
                "duration": 272,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?tx_packets=\" + expected_tx_packets)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.packets.should.be.equal(expected_tx_packets);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "a4409fbd-c10c-4c0c-837a-a21fc7380a21",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_packets",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: rx_packets",
                "timedOut": false,
                "duration": 277,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?rx_packets=\" + expected_rx_packets)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.packets.should.be.equal(expected_rx_packets);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e3cf7a04-ae48-4e34-869a-a97586e32593",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_bytes",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: tx_bytes",
                "timedOut": false,
                "duration": 274,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?tx_bytes=\" + expected_tx_bytes)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.bytes.should.be.equal(expected_tx_bytes);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9eac946f-c862-4c7e-8dce-7170e01952dc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_bytes",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: rx_bytes",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?rx_bytes=\" + expected_rx_bytes)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.bytes.should.be.equal(expected_rx_bytes);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1937abda-a929-4474-961a-29067699668d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_errors",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: tx_errors",
                "timedOut": false,
                "duration": 272,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?tx_errors=\" + expected_tx_errors)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.errors.should.be.equal(expected_tx_errors);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f38925af-819b-4b14-8516-f9db81477935",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_errors",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: rx_errors",
                "timedOut": false,
                "duration": 287,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?rx_errors=\" + expected_rx_errors)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.errors.should.be.equal(expected_rx_errors);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "d605d204-9346-48cb-b4f2-4d9752d356d9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: tx_dropped",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: tx_dropped",
                "timedOut": false,
                "duration": 292,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?tx_dropped=\" + expected_tx_dropped)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].tx.dropped.should.be.equal(expected_tx_dropped);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "f460333d-1f64-4eb0-a04e-ad09aa127554",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: rx_dropped",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Filter: rx_dropped",
                "timedOut": false,
                "duration": 285,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?rx_dropped=\" + expected_rx_dropped)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        res.body.data.items[0].should.have.properties(netiface_properties);\n        res.body.data.items[0].rx.dropped.should.be.equal(expected_rx_dropped);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ad83afdf-ad77-4fc0-b420-c60a3acd8148",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Query",
                "fullTitle": "Syscollector GET/syscollector/000/netiface Query",
                "timedOut": false,
                "duration": 281,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n    .get(\"/syscollector/\" + agent_id + \"/netiface?q=rx_dropped>\" + expected_rx_dropped)\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err);\n        res.body.should.have.properties(['error', 'data']);\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "e2d33039-8a36-4fd1-a4fb-c3be7ba64464",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "230a5a25-2fd7-46f4-98a0-75bfacf6053a",
              "517069c1-8e4d-4257-930f-7d61e8426603",
              "d7b91302-7f64-4a22-ba47-ce8a3d4cf482",
              "10b29908-c9bb-4609-951c-0501cadbdb61",
              "9ed4f7bd-ce97-4a39-b495-6b06fbe72e59",
              "7bf2543e-e9ba-4885-a9ba-2dea3cf0315c",
              "902dbfb7-e9f7-461e-8577-3e6e975248f9",
              "c2947c6c-3eaf-4756-82df-b38875be3d1d",
              "129d5053-dde2-4fb7-bc63-c7691d7ebded",
              "3e1795ca-49c8-48c4-a0e5-a65e82ef54ac",
              "debc1a37-e69d-4e08-9128-5e1b0725ef49",
              "3640eca9-4072-46ba-b66a-7ddb2478e760",
              "a4409fbd-c10c-4c0c-837a-a21fc7380a21",
              "e3cf7a04-ae48-4e34-869a-a97586e32593",
              "9eac946f-c862-4c7e-8dce-7170e01952dc",
              "1937abda-a929-4474-961a-29067699668d",
              "f38925af-819b-4b14-8516-f9db81477935",
              "d605d204-9346-48cb-b4f2-4d9752d356d9",
              "f460333d-1f64-4eb0-a04e-ad09aa127554",
              "ad83afdf-ad77-4fc0-b420-c60a3acd8148",
              "e2d33039-8a36-4fd1-a4fb-c3be7ba64464"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5554,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          },
          {
            "uuid": "68482d8a-70b9-4a0e-98bf-7d64331b3264",
            "title": "GET/syscollector/:agent_id/hotfixes",
            "fullFile": "/wazuh-api/test/test_syscollector.js",
            "file": "/test/test_syscollector.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes \"before all\" hook",
                "timedOut": false,
                "duration": 4,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "query = \"agent 001 sql insert or ignore into sys_hotfixes(scan_id, scan_time, hotfix) values\" +\n    \"(1408519641, '2019/08/05 12:06:26', 'KB2533552'),\" +\n    \"(1408519641, '2019/08/05 12:06:26', 'KB2534366'),\" +\n    \"(1408519641, '2019/08/05 12:06:26', 'KB2562937'),\" +\n    \"(1408519641, '2019/08/05 12:06:26', 'KB2998812'),\" +\n    \"(1408519641, '2019/08/05 12:06:26', 'KB3004469'),\" +\n    \"(1408519641, '2019/08/05 12:06:26', 'KB3015428');\"\nspawn('python3', [wdb_script_path, '-q', query])",
                "err": {},
                "isRoot": false,
                "uuid": "b2997b26-cbc1-482b-b0bb-075d3a21e3df",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes \"after all\" hook",
                "timedOut": false,
                "duration": 2,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "query = \"agent 001 sql delete from sys_hotfixes;\"\nspawn('python3', [wdb_script_path, '-q', query])",
                "err": {},
                "isRoot": false,
                "uuid": "ef5d5166-d657-4e9e-8504-b61979c4767c",
                "isHook": true,
                "skipped": false
              }
            ],
            "tests": [
              {
                "title": "Request",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Request",
                "timedOut": false,
                "duration": 279,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'data'])\n        res.body.error.should.equal(0)\n        res.body.data.should.have.properties(['items', 'totalItems'])\n        res.body.data.totalItems.should.be.above(0)\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hotfixes_fields)\n        res.body.data.items[0].scan.should.have.properties(scan_fields)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "0b060822-7774-4d6a-af60-2042e3293332",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Selector",
                "timedOut": false,
                "duration": 282,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?select=hotfix\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'data'])\n        res.body.error.should.equal(0)\n        res.body.data.should.have.properties(['items', 'totalItems'])\n        res.body.data.totalItems.should.be.above(0)\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(['hotfix'])\n        done();\n    });run",
                "err": {},
                "isRoot": false,
                "uuid": "592d35b0-53f0-4e40-829d-bcfae31ea403",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Not allowed selector",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Not allowed selector",
                "timedOut": false,
                "duration": 285,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?select=date\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'message'])\n        res.body.error.should.equal(1724)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "01771df4-4680-4b8a-9fd5-a14dd43b6687",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Pagination",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Pagination",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?offset=1&limit=1\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'data'])\n        res.body.error.should.equal(0)\n        res.body.data.should.have.properties(['items', 'totalItems'])\n        res.body.data.totalItems.should.be.above(0)\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hotfixes_fields)\n        res.body.data.items[0].scan.should.have.properties(scan_fields)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "1b65f3da-2b19-4cc1-badb-555d04c0a3ce",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Wrong limit",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Wrong limit",
                "timedOut": false,
                "duration": 286,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?limit=1000000\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'message'])\n        res.body.error.should.equal(1405)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "06af9f58-4455-426d-be73-49c9b946a0e7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort -",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Sort -",
                "timedOut": false,
                "duration": 279,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?sort=-hotfix\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'data'])\n        res.body.error.should.equal(0)\n        res.body.data.should.have.properties(['items', 'totalItems'])\n        res.body.data.totalItems.should.be.above(0)\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hotfixes_fields)\n        res.body.data.items[0].scan.should.have.properties(scan_fields)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "ef7da7ca-f540-4eac-9c8c-6dbc30f15ba9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Sort +",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Sort +",
                "timedOut": false,
                "duration": 278,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?sort=+hotfix\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'data'])\n        res.body.error.should.equal(0)\n        res.body.data.should.have.properties(['items', 'totalItems'])\n        res.body.data.totalItems.should.be.above(0)\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hotfixes_fields)\n        res.body.data.items[0].scan.should.have.properties(scan_fields)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "9b255271-a900-493a-b489-416b22f94704",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Search",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Search",
                "timedOut": false,
                "duration": 285,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?search=KB2562937\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'data'])\n        res.body.error.should.equal(0)\n        res.body.data.should.have.properties(['items', 'totalItems'])\n        res.body.data.totalItems.should.be.above(0)\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hotfixes_fields)\n        res.body.data.items[0].scan.should.have.properties(scan_fields)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "af62c6e8-7833-4579-9e67-4d452416c49e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Filter: hotfix",
                "fullTitle": "Syscollector GET/syscollector/:agent_id/hotfixes Filter: hotfix",
                "timedOut": false,
                "duration": 280,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(common.url)\n.get(\"/syscollector/\" + agent_hotfixes + \"/hotfixes?hotfix=KB2562937\")\n    .auth(common.credentials.user, common.credentials.password)\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\n        if (err) return done(err)\n        res.body.should.have.properties(['error', 'data'])\n        res.body.error.should.equal(0)\n        res.body.data.should.have.properties(['items', 'totalItems'])\n        res.body.data.totalItems.should.be.above(0)\n        res.body.data.items.should.be.instanceof(Array)\n        res.body.data.items[0].should.have.properties(hotfixes_fields)\n        res.body.data.items[0].scan.should.have.properties(scan_fields)\n        done();\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "de02c63f-c9ff-4d3c-a456-ddf7e584f54f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0b060822-7774-4d6a-af60-2042e3293332",
              "592d35b0-53f0-4e40-829d-bcfae31ea403",
              "01771df4-4680-4b8a-9fd5-a14dd43b6687",
              "1b65f3da-2b19-4cc1-badb-555d04c0a3ce",
              "06af9f58-4455-426d-be73-49c9b946a0e7",
              "ef7da7ca-f540-4eac-9c8c-6dbc30f15ba9",
              "9b255271-a900-493a-b489-416b22f94704",
              "af62c6e8-7833-4579-9e67-4d452416c49e",
              "de02c63f-c9ff-4d3c-a456-ddf7e584f54f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2537,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2020
}